{
	"id": "2704bd620da8b41eb8d59c97fea48120",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\nimport './SafeMath.sol';\r\nimport './TransferHelper.sol';\r\nimport './Ownable.sol';\r\nimport './IERC20.sol';\r\n\r\ncontract EcioStaking is Ownable {\r\n    using SafeMath  for uint;\r\n\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewarded;\r\n        uint256 rewardDebt;\r\n        uint256 lastCalculatedTimeStamp;\r\n        uint256 lastDepositTimeStamp;\r\n    }\r\n\r\n    // pool info\r\n    address public lpToken;\r\n    uint256 public totalAmount;\r\n    uint256 public lastRewardTimeStamp;\r\n\r\n    uint256 private REWARD_PER_DAY = 1 * 1e6 * 1e18; // 1,000,000, ecio per day\r\n\r\n\r\n    address public rewardToken;\r\n    address public adminAddress;\r\n    // Reward tokens created per Sec.\r\n    \r\n    // Info of each user that stakes LP tokens.\r\n    mapping (address => UserInfo) public userInfo;\r\n    address[] public userList;\r\n    uint256 public lockedTime = 60 * 24 * 3600; // 30days\r\n    uint private unlocked = 1;\r\n\r\n    event Deposit(address indexed user, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 amount);\r\n    event Reward(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        address _lpToken,\r\n        address _rewardToken\r\n    ) public {\r\n        adminAddress = msg.sender;\r\n        lpToken = _lpToken;\r\n        rewardToken = _rewardToken;\r\n        totalAmount = 0;\r\n        _transferOwnership(msg.sender);\r\n    }\r\n\r\n    function updateRewardTokenAddress(address _address) public onlyOwner {\r\n        rewardToken = _address;\r\n    }\r\n    \r\n    function updateLpTokenAddress(address _address) public onlyOwner {\r\n        lpToken = _address;\r\n    }\r\n\r\n    function userCounter() public view returns (uint256) {\r\n        return userList.length;\r\n    }\r\n\r\n    function userAddress(uint256 userNum) public view returns (address) {\r\n        return userList[userNum];\r\n    }\r\n\r\n    function userStakedLpAmount(uint256 userNum) public view returns (uint256) {\r\n        UserInfo storage user = userInfo[userList[userNum]];\r\n        return user.amount;\r\n    }\r\n\r\n    function ecioClaimPossible(address _useraddress) public view returns (uint256) {\r\n        UserInfo storage user = userInfo[_useraddress];\r\n        uint256 lastTimeStamp = block.timestamp;\r\n        uint256 virtualRewardAmount = 0;\r\n        uint256 virtualActiveDay = (lastTimeStamp - user.lastCalculatedTimeStamp) / (1 days);\r\n        virtualRewardAmount = (virtualActiveDay * user.amount * REWARD_PER_DAY) / totalAmount;\r\n        return virtualRewardAmount;\r\n    }\r\n\r\n    function totalLpTokenAmount() public view returns (uint256) {\r\n        return totalAmount;\r\n    }\r\n\r\n    function updatePool() internal {\r\n        for (uint i = 0; i < userList.length; i++) {\r\n            UserInfo storage user = userInfo[userList[i]];\r\n            uint256 lastTimeStamp = block.timestamp;\r\n            uint256 rewardedDay = (lastTimeStamp - user.lastCalculatedTimeStamp) / 1 days;\r\n            uint256 accDebt = rewardedDay * REWARD_PER_DAY * user.amount / totalAmount;\r\n            user.rewardDebt = user.rewardDebt.add(accDebt);\r\n            user.lastCalculatedTimeStamp = user.lastCalculatedTimeStamp + rewardedDay * 1 days;\r\n        }\r\n    }\r\n\r\n    function stake(uint256 amount) public {\r\n        require(amount > 0, \"invaild amount\");\r\n        TransferHelper.safeTransferFrom(lpToken, msg.sender, address(this), amount);\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        bool isFirst = true;\r\n        for (uint i = 0; i < userList.length; i++) {\r\n            if (userList[i] == msg.sender) {\r\n                isFirst = false;\r\n            }\r\n        }\r\n        updatePool();\r\n        if (isFirst) {\r\n            userList.push(msg.sender);\r\n            user.amount = amount;\r\n            user.rewarded = 0;\r\n            user.rewardDebt = 0;\r\n            user.lastDepositTimeStamp = block.timestamp;\r\n            user.lastCalculatedTimeStamp = block.timestamp;            \r\n        } else {\r\n            user.amount = user.amount + amount;\r\n            user.lastDepositTimeStamp = block.timestamp;\r\n            user.lastCalculatedTimeStamp = block.timestamp;\r\n        }\r\n        totalAmount = totalAmount + amount;\r\n        emit Deposit(msg.sender, amount);\r\n    }\r\n\r\n    function deleteBlock() internal {\r\n        bool isUser = false;\r\n        for(uint256 i = 0 ; i < userList.length - 1 ; i ++){\r\n            if(userList[i] == msg.sender){\r\n                isUser = true;\r\n                continue;\r\n            }\r\n            if(isUser == false) {\r\n                continue;\r\n            }\r\n            userList[i] = userList[i + 1];\r\n        }\r\n        userList.pop();\r\n    }\r\n\r\n    function withdraw() public {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(user.lastDepositTimeStamp > 0, \"invalid user\");\r\n        require(user.amount > 0, \"not staked\");\r\n        require(user.lastDepositTimeStamp + lockedTime < block.timestamp, \"you are in lockedTime.\");\r\n        updatePool();\r\n        TransferHelper.safeTransfer(lpToken, msg.sender, user.amount);\r\n        totalAmount = totalAmount - user.amount;\r\n        deleteBlock();\r\n        emit Withdraw(msg.sender, user.amount);\r\n    }\r\n\r\n    function claim() public {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        updatePool();\r\n        uint amount = user.rewardDebt;\r\n        require(amount > 0, \"not enough reward amount\");\r\n        user.rewarded = user.rewarded + amount;\r\n        user.rewardDebt = 0;\r\n        TransferHelper.safeTransfer(rewardToken, msg.sender, amount);\r\n        emit Reward(msg.sender, amount);\r\n    }\r\n\r\n    function transferToken(address _contractAddress, address _to, uint256 _amount) external onlyOwner {\r\n        IERC20 _token = IERC20(_contractAddress);\r\n        _token.transfer(_to, _amount);\r\n    }\r\n}\r\n\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >=0.6.0;\r\n\r\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::safeApprove: approve failed'\r\n        );\r\n    }\r\n\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::safeTransfer: transfer failed'\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::transferFrom: transferFrom failed'\r\n        );\r\n    }\r\n\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\r\n    }\r\n}"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Ownable.sol\":{\"keccak256\":\"0x1ff0e24b46e1ffd5492d354b917f039cb789e4c24bf8fe57aa62c3805c901ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55ea5b40556884d06b3e0eb477c269de45faa81aacca7f5536a543e3f1fe244\",\"dweb:/ipfs/QmfE47Ftm6yRJzHAYtdj9K7HLV7boqjFuZ5er32836hvTB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 107,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":497:7008  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":497:7008  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220de7eb72fe31addada681774dc340137b5a887f2591cf8d65a5176999f424f94c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de7eb72fe31addada681774dc340137b5a887f2591cf8d65a5176999f424f94c64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE PUSH31 0xB72FE31ADDADA681774DC340137B5A887F2591CF8D65A5176999F424F94C64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "497:6511:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;497:6511:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de7eb72fe31addada681774dc340137b5a887f2591cf8d65a5176999f424f94c64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE PUSH31 0xB72FE31ADDADA681774DC340137B5A887F2591CF8D65A5176999F424F94C64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "497:6511:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de7eb72fe31addada681774dc340137b5a887f2591cf8d65a5176999f424f94c64736f6c63430008040033",
									".code": [
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TransferHelper.sol\":188:1854  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TransferHelper.sol\":188:1854  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201224b3c84879344825776eb1e710ed728acc8f6f32ebba408d7d54e3b8df3fae64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201224b3c84879344825776eb1e710ed728acc8f6f32ebba408d7d54e3b8df3fae64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x24 0xB3 0xC8 0x48 PUSH26 0x344825776EB1E710ED728ACC8F6F32EBBA408D7D54E3B8DF3FAE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "188:1666:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:1666:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201224b3c84879344825776eb1e710ed728acc8f6f32ebba408d7d54e3b8df3fae64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x24 0xB3 0xC8 0x48 PUSH26 0x344825776EB1E710ED728ACC8F6F32EBBA408D7D54E3B8DF3FAE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "188:1666:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 188,
									"end": 1854,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201224b3c84879344825776eb1e710ed728acc8f6f32ebba408d7d54e3b8df3fae64736f6c63430008040033",
									".code": [
										{
											"begin": 188,
											"end": 1854,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 1854,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TransferHelper.sol\":{\"keccak256\":\"0x02303105b4552c8801a5dfd82c3cc4584b7be8b60bdbad255fc90057150c7b91\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4286026677d8c5848999027707de5897aaecd4956624be5f2857c61ed1cd09f8\",\"dweb:/ipfs/QmXrEqLmmLF5WMsxvLdBQqPMBuWHXSA3rLjekaPgDKZx7t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"EcioStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Reward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "adminAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_useraddress",
									"type": "address"
								}
							],
							"name": "ecioClaimPossible",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockedTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLpTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "updateLpTokenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "updateRewardTokenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userNum",
									"type": "uint256"
								}
							],
							"name": "userAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewarded",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastCalculatedTimeStamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastDepositTimeStamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userNum",
									"type": "uint256"
								}
							],
							"name": "userStakedLpAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":169:5795  contract EcioStaking is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":591:605  1 * 1e6 * 1e18 */\n  0xd3c21bcecceda1000000\n    /* \"staking.sol\":558:605  uint256 private REWARD_PER_DAY = 1 * 1e6 * 1e18 */\n  0x04\n  sstore\n    /* \"staking.sol\":916:930  60 * 24 * 3600 */\n  0x4f1a00\n    /* \"staking.sol\":888:930  uint256 public lockedTime = 60 * 24 * 3600 */\n  0x09\n  sstore\n    /* \"staking.sol\":971:972  1 */\n  0x01\n    /* \"staking.sol\":947:972  uint private unlocked = 1 */\n  0x0a\n  sstore\n    /* \"staking.sol\":1157:1418  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Ownable.sol\":942:960  _transferOwnership */\n  tag_10\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"staking.sol\":1252:1264  adminAddress */\n  0x06\n    /* \"staking.sol\":1252:1277  adminAddress = msg.sender */\n  dup1\n  sload\n    /* \"staking.sol\":1267:1277  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"staking.sol\":1252:1277  adminAddress = msg.sender */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n  0x01\n    /* \"staking.sol\":1288:1306  lpToken = _lpToken */\n  dup1\n  sload\n  dup3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n  0x05\n    /* \"staking.sol\":1317:1343  rewardToken = _rewardToken */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  swap1\n  dup5\n  and\n  or\n  swap1\n  sstore\n  0x00\n    /* \"staking.sol\":1354:1365  totalAmount */\n  0x02\n    /* \"staking.sol\":1354:1369  totalAmount = 0 */\n  sstore\n    /* \"staking.sol\":1380:1410  _transferOwnership(msg.sender) */\n  tag_12\n  swap1\n    /* \"staking.sol\":1380:1398  _transferOwnership */\n  tag_10\n    /* \"staking.sol\":1380:1410  _transferOwnership(msg.sender) */\n  jump\t// in\ntag_12:\n    /* \"staking.sol\":1157:1418  constructor(\r... */\n  pop\n  pop\n    /* \"staking.sol\":169:5795  contract EcioStaking is Ownable {\r... */\n  jump(tag_16)\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2426:2432  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Ownable.sol\":2426:2432  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  swap1\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_19:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:499   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:306   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":357:363   */\n  dup2\n    /* \"#utility.yul\":349:355   */\n  dup3\n    /* \"#utility.yul\":342:364   */\n  revert\n    /* \"#utility.yul\":304:306   */\ntag_21:\n    /* \"#utility.yul\":385:425   */\n  tag_22\n    /* \"#utility.yul\":415:424   */\n  dup4\n    /* \"#utility.yul\":385:425   */\n  tag_17\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":375:425   */\n  swap2\n  pop\n    /* \"#utility.yul\":444:493   */\n  tag_23\n    /* \"#utility.yul\":489:491   */\n  0x20\n    /* \"#utility.yul\":478:487   */\n  dup5\n    /* \"#utility.yul\":474:492   */\n  add\n    /* \"#utility.yul\":444:493   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":434:493   */\n  swap1\n  pop\n    /* \"#utility.yul\":294:499   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_16:\n    /* \"staking.sol\":169:5795  contract EcioStaking is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":169:5795  contract EcioStaking is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9674a0ac\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xf0c37a59\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xf0c37a59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf5537ede\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc6f9468\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfd1a2397\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x9674a0ac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f4216e8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa8b38205\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbce4f054\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x5fcbd285\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x5fcbd285\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5fd595c0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6a9db411\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6e26a967\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x1959a002\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x356c7284\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":804:849  mapping (address => UserInfo) public userInfo */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      dup6\n      jump\n    tag_28:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6303:6328   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":6359:6361   */\n      0x20\n        /* \"#utility.yul\":6344:6362   */\n      dup7\n      add\n        /* \"#utility.yul\":6337:6371   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":6387:6405   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":6380:6414   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6445:6447   */\n      0x60\n        /* \"#utility.yul\":6430:6448   */\n      dup4\n      add\n        /* \"#utility.yul\":6423:6457   */\n      mstore\n        /* \"#utility.yul\":6488:6491   */\n      0x80\n        /* \"#utility.yul\":6473:6492   */\n      dup3\n      add\n        /* \"#utility.yul\":6466:6501   */\n      mstore\n        /* \"#utility.yul\":6290:6293   */\n      0xa0\n        /* \"#utility.yul\":6275:6294   */\n      add\n        /* \"staking.sol\":804:849  mapping (address => UserInfo) public userInfo */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":482:508  uint256 public totalAmount */\n    tag_4:\n      tag_34\n      sload(0x02)\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":6008:6033   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"#utility.yul\":5981:5999   */\n      add\n        /* \"staking.sol\":482:508  uint256 public totalAmount */\n      tag_32\n        /* \"#utility.yul\":5963:6039   */\n      jump\n        /* \"staking.sol\":515:549  uint256 public lastRewardTimeStamp */\n    tag_5:\n      tag_34\n      sload(0x03)\n      dup2\n      jump\n        /* \"staking.sol\":4655:5179  function withdraw() public {\r... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"staking.sol\":5187:5587  function claim() public {\r... */\n    tag_7:\n      tag_41\n      tag_44\n      jump\t// in\n        /* \"staking.sol\":453:475  address public lpToken */\n    tag_8:\n      sload(0x01)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1832:1864   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1814:1865   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1802:1804   */\n      0x20\n        /* \"#utility.yul\":1787:1805   */\n      add\n        /* \"staking.sol\":453:475  address public lpToken */\n      tag_32\n        /* \"#utility.yul\":1769:1871   */\n      jump\n        /* \"staking.sol\":1548:1650  function updateLpTokenAddress(address _address) public onlyOwner {\r... */\n    tag_9:\n      tag_41\n      tag_50\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"staking.sol\":1879:2053  function userStakedLpAmount(uint256 userNum) public view returns (uint256) {\r... */\n    tag_10:\n      tag_34\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"staking.sol\":2061:2525  function ecioClaimPossible(address _useraddress) public view returns (uint256) {\r... */\n    tag_11:\n      tag_34\n      tag_58\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_12:\n      tag_41\n      tag_62\n      jump\t// in\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_13:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      jump(tag_45)\n        /* \"staking.sol\":1760:1871  function userAddress(uint256 userNum) public view returns (address) {\r... */\n    tag_14:\n      tag_45\n      tag_67\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"staking.sol\":856:881  address[] public userList */\n    tag_15:\n      tag_45\n      tag_71\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"staking.sol\":3203:4232  function stake(uint256 amount) public {\r... */\n    tag_16:\n      tag_41\n      tag_75\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"staking.sol\":888:930  uint256 public lockedTime = 60 * 24 * 3600 */\n    tag_17:\n      tag_34\n      sload(0x09)\n      dup2\n      jump\n        /* \"staking.sol\":2533:2630  function totalLpTokenAmount() public view returns (uint256) {\r... */\n    tag_18:\n        /* \"staking.sol\":2611:2622  totalAmount */\n      sload(0x02)\n        /* \"staking.sol\":2533:2630  function totalLpTokenAmount() public view returns (uint256) {\r... */\n      jump(tag_34)\n        /* \"staking.sol\":1658:1752  function userCounter() public view returns (uint256) {\r... */\n    tag_19:\n        /* \"staking.sol\":1729:1737  userList */\n      0x08\n        /* \"staking.sol\":1729:1744  userList.length */\n      sload\n        /* \"staking.sol\":1658:1752  function userCounter() public view returns (uint256) {\r... */\n      jump(tag_34)\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_20:\n      tag_41\n      tag_87\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"staking.sol\":5595:5792  function transferToken(address _contractAddress, address _to, uint256 _amount) external onlyOwner {\r... */\n    tag_21:\n      tag_41\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"staking.sol\":643:669  address public rewardToken */\n    tag_22:\n      sload(0x05)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"staking.sol\":676:703  address public adminAddress */\n    tag_23:\n      sload(0x06)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"staking.sol\":1426:1536  function updateRewardTokenAddress(address _address) public onlyOwner {\r... */\n    tag_24:\n      tag_41\n      tag_100\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"staking.sol\":4655:5179  function withdraw() public {\r... */\n    tag_42:\n        /* \"staking.sol\":4726:4736  msg.sender */\n      caller\n        /* \"staking.sol\":4693:4714  UserInfo storage user */\n      0x00\n        /* \"staking.sol\":4717:4737  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4717:4725  userInfo */\n      0x07\n        /* \"staking.sol\":4717:4737  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":4756:4781  user.lastDepositTimeStamp */\n      0x04\n      dup2\n      add\n      sload\n        /* \"staking.sol\":4748:4802  require(user.lastDepositTimeStamp > 0, \"invalid user\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5372:5374   */\n      0x20\n        /* \"staking.sol\":4748:4802  require(user.lastDepositTimeStamp > 0, \"invalid user\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5354:5375   */\n      mstore\n        /* \"#utility.yul\":5411:5413   */\n      0x0c\n        /* \"#utility.yul\":5391:5409   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5384:5414   */\n      mstore\n      shl(0xa1, 0x34b73b30b634b2103ab9b2b9)\n        /* \"#utility.yul\":5430:5448   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5423:5465   */\n      mstore\n        /* \"#utility.yul\":5482:5500   */\n      0x64\n      add\n        /* \"staking.sol\":4748:4802  require(user.lastDepositTimeStamp > 0, \"invalid user\") */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"staking.sol\":4821:4832  user.amount */\n      dup1\n      sload\n        /* \"staking.sol\":4813:4851  require(user.amount > 0, \"not staked\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3905:3907   */\n      0x20\n        /* \"staking.sol\":4813:4851  require(user.amount > 0, \"not staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3887:3908   */\n      mstore\n        /* \"#utility.yul\":3944:3946   */\n      0x0a\n        /* \"#utility.yul\":3924:3942   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3917:3947   */\n      mstore\n      shl(0xb2, 0x1b9bdd081cdd185ad959)\n        /* \"#utility.yul\":3963:3981   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3956:3996   */\n      mstore\n        /* \"#utility.yul\":4013:4031   */\n      0x64\n      add\n        /* \"staking.sol\":4813:4851  require(user.amount > 0, \"not staked\") */\n      tag_104\n        /* \"#utility.yul\":3877:4037   */\n      jump\n        /* \"staking.sol\":4813:4851  require(user.amount > 0, \"not staked\") */\n    tag_106:\n        /* \"staking.sol\":4911:4926  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4898:4908  lockedTime */\n      sload(0x09)\n        /* \"staking.sol\":4870:4874  user */\n      dup3\n        /* \"staking.sol\":4870:4895  user.lastDepositTimeStamp */\n      0x04\n      add\n      sload\n        /* \"staking.sol\":4870:4908  user.lastDepositTimeStamp + lockedTime */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"staking.sol\":4870:4926  user.lastDepositTimeStamp + lockedTime < block.timestamp */\n      lt\n        /* \"staking.sol\":4862:4953  require(user.lastDepositTimeStamp + lockedTime < block.timestamp, \"you are in lockedTime.\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5713:5715   */\n      0x20\n        /* \"staking.sol\":4862:4953  require(user.lastDepositTimeStamp + lockedTime < block.timestamp, \"you are in lockedTime.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5695:5716   */\n      mstore\n        /* \"#utility.yul\":5752:5754   */\n      0x16\n        /* \"#utility.yul\":5732:5750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5725:5755   */\n      mstore\n      shl(0x51, 0x3cb7ba9030b9329034b7103637b1b5b2b22a34b6b297)\n        /* \"#utility.yul\":5771:5789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5764:5816   */\n      mstore\n        /* \"#utility.yul\":5833:5851   */\n      0x64\n      add\n        /* \"staking.sol\":4862:4953  require(user.lastDepositTimeStamp + lockedTime < block.timestamp, \"you are in lockedTime.\") */\n      tag_104\n        /* \"#utility.yul\":5685:5857   */\n      jump\n        /* \"staking.sol\":4862:4953  require(user.lastDepositTimeStamp + lockedTime < block.timestamp, \"you are in lockedTime.\") */\n    tag_111:\n        /* \"staking.sol\":4964:4976  updatePool() */\n      tag_114\n        /* \"staking.sol\":4964:4974  updatePool */\n      tag_115\n        /* \"staking.sol\":4964:4976  updatePool() */\n      jump\t// in\n    tag_114:\n        /* \"staking.sol\":5015:5022  lpToken */\n      sload(0x01)\n        /* \"staking.sol\":5036:5047  user.amount */\n      dup2\n      sload\n        /* \"staking.sol\":4987:5048  TransferHelper.safeTransfer(lpToken, msg.sender, user.amount) */\n      tag_116\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5015:5022  lpToken */\n      and\n      swap1\n        /* \"staking.sol\":5024:5034  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":4987:5014  TransferHelper.safeTransfer */\n      tag_117\n        /* \"staking.sol\":4987:5048  TransferHelper.safeTransfer(lpToken, msg.sender, user.amount) */\n      jump\t// in\n    tag_116:\n        /* \"staking.sol\":5087:5098  user.amount */\n      dup1\n      sload\n        /* \"staking.sol\":5073:5084  totalAmount */\n      sload(0x02)\n        /* \"staking.sol\":5073:5098  totalAmount - user.amount */\n      tag_118\n      swap2\n        /* \"staking.sol\":5087:5098  user.amount */\n      swap1\n        /* \"staking.sol\":5073:5098  totalAmount - user.amount */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"staking.sol\":5059:5070  totalAmount */\n      0x02\n        /* \"staking.sol\":5059:5098  totalAmount = totalAmount - user.amount */\n      sstore\n        /* \"staking.sol\":5109:5122  deleteBlock() */\n      tag_120\n        /* \"staking.sol\":5109:5120  deleteBlock */\n      tag_121\n        /* \"staking.sol\":5109:5122  deleteBlock() */\n      jump\t// in\n    tag_120:\n        /* \"staking.sol\":5159:5170  user.amount */\n      dup1\n      sload\n        /* \"staking.sol\":5138:5171  Withdraw(msg.sender, user.amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6008:6033   */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5147:5157  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":5138:5171  Withdraw(msg.sender, user.amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap1\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"#utility.yul\":5981:5999   */\n      add\n        /* \"staking.sol\":5138:5171  Withdraw(msg.sender, user.amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking.sol\":4655:5179  function withdraw() public {\r... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":5187:5587  function claim() public {\r... */\n    tag_44:\n        /* \"staking.sol\":5255:5265  msg.sender */\n      caller\n        /* \"staking.sol\":5222:5243  UserInfo storage user */\n      0x00\n        /* \"staking.sol\":5246:5266  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5246:5254  userInfo */\n      0x07\n        /* \"staking.sol\":5246:5266  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":5277:5289  updatePool() */\n      tag_124\n        /* \"staking.sol\":5277:5287  updatePool */\n      tag_115\n        /* \"staking.sol\":5277:5289  updatePool() */\n      jump\t// in\n    tag_124:\n        /* \"staking.sol\":5314:5329  user.rewardDebt */\n      0x02\n      dup2\n      add\n      sload\n        /* \"staking.sol\":5348:5358  amount > 0 */\n      dup1\n        /* \"staking.sol\":5340:5387  require(amount > 0, \"not enough reward amount\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4605:4607   */\n      0x20\n        /* \"staking.sol\":5340:5387  require(amount > 0, \"not enough reward amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4587:4608   */\n      mstore\n        /* \"#utility.yul\":4644:4646   */\n      0x18\n        /* \"#utility.yul\":4624:4642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4617:4647   */\n      mstore\n        /* \"#utility.yul\":4683:4709   */\n      0x6e6f7420656e6f7567682072657761726420616d6f756e740000000000000000\n        /* \"#utility.yul\":4663:4681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4656:4710   */\n      mstore\n        /* \"#utility.yul\":4727:4745   */\n      0x64\n      add\n        /* \"staking.sol\":5340:5387  require(amount > 0, \"not enough reward amount\") */\n      tag_104\n        /* \"#utility.yul\":4577:4751   */\n      jump\n        /* \"staking.sol\":5340:5387  require(amount > 0, \"not enough reward amount\") */\n    tag_125:\n        /* \"staking.sol\":5430:5436  amount */\n      dup1\n        /* \"staking.sol\":5414:5418  user */\n      dup3\n        /* \"staking.sol\":5414:5427  user.rewarded */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":5414:5436  user.rewarded + amount */\n      tag_128\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_128:\n        /* \"staking.sol\":5398:5411  user.rewarded */\n      0x01\n      dup4\n      add\n        /* \"staking.sol\":5398:5436  user.rewarded = user.rewarded + amount */\n      sstore\n        /* \"staking.sol\":5465:5466  0 */\n      0x00\n        /* \"staking.sol\":5447:5462  user.rewardDebt */\n      0x02\n      dup4\n      add\n        /* \"staking.sol\":5447:5466  user.rewardDebt = 0 */\n      sstore\n        /* \"staking.sol\":5505:5516  rewardToken */\n      sload(0x05)\n        /* \"staking.sol\":5477:5537  TransferHelper.safeTransfer(rewardToken, msg.sender, amount) */\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5505:5516  rewardToken */\n      and\n        /* \"staking.sol\":5518:5528  msg.sender */\n      caller\n        /* \"staking.sol\":5530:5536  amount */\n      dup4\n        /* \"staking.sol\":5477:5504  TransferHelper.safeTransfer */\n      tag_117\n        /* \"staking.sol\":5477:5537  TransferHelper.safeTransfer(rewardToken, msg.sender, amount) */\n      jump\t// in\n    tag_129:\n        /* \"staking.sol\":5553:5579  Reward(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6008:6033   */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":5560:5570  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":5553:5579  Reward(msg.sender, amount) */\n      0x619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9\n      swap1\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"#utility.yul\":5981:5999   */\n      add\n        /* \"staking.sol\":5553:5579  Reward(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking.sol\":5187:5587  function claim() public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1548:1650  function updateLpTokenAddress(address _address) public onlyOwner {\r... */\n    tag_51:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"staking.sol\":1624:1631  lpToken */\n      0x01\n        /* \"staking.sol\":1624:1642  lpToken = _address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":1548:1650  function updateLpTokenAddress(address _address) public onlyOwner {\r... */\n      jump\t// out\n        /* \"staking.sol\":1879:2053  function userStakedLpAmount(uint256 userNum) public view returns (uint256) {\r... */\n    tag_55:\n        /* \"staking.sol\":1945:1952  uint256 */\n      0x00\n        /* \"staking.sol\":1965:1986  UserInfo storage user */\n      dup1\n        /* \"staking.sol\":1989:1997  userInfo */\n      0x07\n        /* \"staking.sol\":1989:2016  userInfo[userList[userNum]] */\n      0x00\n        /* \"staking.sol\":1998:2006  userList */\n      0x08\n        /* \"staking.sol\":2007:2014  userNum */\n      dup6\n        /* \"staking.sol\":1998:2015  userList[userNum] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_140:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"staking.sol\":1989:2016  userInfo[userList[userNum]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"staking.sol\":2034:2045  user.amount */\n      sload\n      swap4\n        /* \"staking.sol\":1879:2053  function userStakedLpAmount(uint256 userNum) public view returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":2061:2525  function ecioClaimPossible(address _useraddress) public view returns (uint256) {\r... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2175:2197  userInfo[_useraddress] */\n      dup2\n      and\n        /* \"staking.sol\":2131:2138  uint256 */\n      0x00\n        /* \"staking.sol\":2175:2197  userInfo[_useraddress] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2175:2183  userInfo */\n      0x07\n        /* \"staking.sol\":2175:2197  userInfo[_useraddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":2344:2372  user.lastCalculatedTimeStamp */\n      0x03\n      dup2\n      add\n      sload\n        /* \"staking.sol\":2232:2247  block.timestamp */\n      timestamp\n      swap1\n        /* \"staking.sol\":2131:2138  uint256 */\n      dup4\n      swap1\n      dup2\n      swap1\n        /* \"staking.sol\":2377:2383  1 days */\n      0x015180\n      swap1\n        /* \"staking.sol\":2328:2372  lastTimeStamp - user.lastCalculatedTimeStamp */\n      tag_143\n      swap1\n        /* \"staking.sol\":2232:2247  block.timestamp */\n      dup6\n        /* \"staking.sol\":2328:2372  lastTimeStamp - user.lastCalculatedTimeStamp */\n      tag_119\n      jump\t// in\n    tag_143:\n        /* \"staking.sol\":2327:2384  (lastTimeStamp - user.lastCalculatedTimeStamp) / (1 days) */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"staking.sol\":2300:2384  uint256 virtualActiveDay = (lastTimeStamp - user.lastCalculatedTimeStamp) / (1 days) */\n      swap1\n      pop\n        /* \"staking.sol\":2469:2480  totalAmount */\n      sload(0x02)\n        /* \"staking.sol\":2451:2465  REWARD_PER_DAY */\n      sload(0x04)\n        /* \"staking.sol\":2437:2441  user */\n      dup6\n        /* \"staking.sol\":2437:2448  user.amount */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":2418:2434  virtualActiveDay */\n      dup4\n        /* \"staking.sol\":2418:2448  virtualActiveDay * user.amount */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"staking.sol\":2418:2465  virtualActiveDay * user.amount * REWARD_PER_DAY */\n      tag_148\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_148:\n        /* \"staking.sol\":2417:2480  (virtualActiveDay * user.amount * REWARD_PER_DAY) / totalAmount */\n      tag_149\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_149:\n        /* \"staking.sol\":2395:2480  virtualRewardAmount = (virtualActiveDay * user.amount * REWARD_PER_DAY) / totalAmount */\n      swap7\n        /* \"staking.sol\":2061:2525  function ecioClaimPossible(address _useraddress) public view returns (uint256) {\r... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_62:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_156\n        /* \"Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Ownable.sol\":1779:1797  _transferOwnership */\n      tag_157\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_156:\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"staking.sol\":1760:1871  function userAddress(uint256 userNum) public view returns (address) {\r... */\n    tag_68:\n        /* \"staking.sol\":1819:1826  address */\n      0x00\n        /* \"staking.sol\":1846:1854  userList */\n      0x08\n        /* \"staking.sol\":1855:1862  userNum */\n      dup3\n        /* \"staking.sol\":1846:1863  userList[userNum] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_160:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"staking.sol\":1760:1871  function userAddress(uint256 userNum) public view returns (address) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":856:881  address[] public userList */\n    tag_72:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"staking.sol\":3203:4232  function stake(uint256 amount) public {\r... */\n    tag_76:\n        /* \"staking.sol\":3269:3270  0 */\n      0x00\n        /* \"staking.sol\":3260:3266  amount */\n      dup2\n        /* \"staking.sol\":3260:3270  amount > 0 */\n      gt\n        /* \"staking.sol\":3252:3289  require(amount > 0, \"invaild amount\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2737:2739   */\n      0x20\n        /* \"staking.sol\":3252:3289  require(amount > 0, \"invaild amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2719:2740   */\n      mstore\n        /* \"#utility.yul\":2776:2778   */\n      0x0e\n        /* \"#utility.yul\":2756:2774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2749:2779   */\n      mstore\n      shl(0x92, 0x1a5b9d985a5b1908185b5bdd5b9d)\n        /* \"#utility.yul\":2795:2813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2788:2832   */\n      mstore\n        /* \"#utility.yul\":2849:2867   */\n      0x64\n      add\n        /* \"staking.sol\":3252:3289  require(amount > 0, \"invaild amount\") */\n      tag_104\n        /* \"#utility.yul\":2709:2873   */\n      jump\n        /* \"staking.sol\":3252:3289  require(amount > 0, \"invaild amount\") */\n    tag_165:\n        /* \"staking.sol\":3332:3339  lpToken */\n      sload(0x01)\n        /* \"staking.sol\":3300:3375  TransferHelper.safeTransferFrom(lpToken, msg.sender, address(this), amount) */\n      tag_168\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3332:3339  lpToken */\n      and\n        /* \"staking.sol\":3341:3351  msg.sender */\n      caller\n        /* \"staking.sol\":3361:3365  this */\n      address\n        /* \"staking.sol\":3368:3374  amount */\n      dup5\n        /* \"staking.sol\":3300:3331  TransferHelper.safeTransferFrom */\n      tag_169\n        /* \"staking.sol\":3300:3375  TransferHelper.safeTransferFrom(lpToken, msg.sender, address(this), amount) */\n      jump\t// in\n    tag_168:\n        /* \"staking.sol\":3419:3429  msg.sender */\n      caller\n        /* \"staking.sol\":3386:3407  UserInfo storage user */\n      0x00\n        /* \"staking.sol\":3410:3430  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3410:3418  userInfo */\n      0x07\n        /* \"staking.sol\":3410:3430  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"staking.sol\":3456:3460  true */\n      0x01\n      swap1\n        /* \"staking.sol\":3471:3621  for (uint i = 0; i < userList.length; i++) {\r... */\n    tag_170:\n        /* \"staking.sol\":3492:3500  userList */\n      0x08\n        /* \"staking.sol\":3492:3507  userList.length */\n      sload\n        /* \"staking.sol\":3488:3507  i < userList.length */\n      dup2\n      lt\n        /* \"staking.sol\":3471:3621  for (uint i = 0; i < userList.length; i++) {\r... */\n      iszero\n      tag_171\n      jumpi\n        /* \"staking.sol\":3548:3558  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3533:3558  userList[i] == msg.sender */\n      and\n        /* \"staking.sol\":3533:3541  userList */\n      0x08\n        /* \"staking.sol\":3542:3543  i */\n      dup3\n        /* \"staking.sol\":3533:3544  userList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_173\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_173:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"staking.sol\":3533:3558  userList[i] == msg.sender */\n      eq\n        /* \"staking.sol\":3529:3610  if (userList[i] == msg.sender) {\r... */\n      iszero\n      tag_175\n      jumpi\n        /* \"staking.sol\":3589:3594  false */\n      0x00\n        /* \"staking.sol\":3579:3594  isFirst = false */\n      swap2\n      pop\n        /* \"staking.sol\":3529:3610  if (userList[i] == msg.sender) {\r... */\n    tag_175:\n        /* \"staking.sol\":3509:3512  i++ */\n      dup1\n      tag_176\n      dup2\n      tag_177\n      jump\t// in\n    tag_176:\n      swap2\n      pop\n      pop\n        /* \"staking.sol\":3471:3621  for (uint i = 0; i < userList.length; i++) {\r... */\n      jump(tag_170)\n    tag_171:\n      pop\n        /* \"staking.sol\":3631:3643  updatePool() */\n      tag_178\n        /* \"staking.sol\":3631:3641  updatePool */\n      tag_115\n        /* \"staking.sol\":3631:3643  updatePool() */\n      jump\t// in\n    tag_178:\n        /* \"staking.sol\":3658:3665  isFirst */\n      dup1\n        /* \"staking.sol\":3654:4137  if (isFirst) {\r... */\n      iszero\n      tag_179\n      jumpi\n        /* \"staking.sol\":3682:3690  userList */\n      0x08\n        /* \"staking.sol\":3682:3707  userList.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"staking.sol\":3696:3706  msg.sender */\n      caller\n        /* \"staking.sol\":3682:3707  userList.push(msg.sender) */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":3722:3742  user.amount = amount */\n      dup5\n      dup5\n      sstore\n        /* \"staking.sol\":3757:3770  user.rewarded */\n      dup4\n      add\n        /* \"staking.sol\":3757:3774  user.rewarded = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"staking.sol\":3789:3804  user.rewardDebt */\n      0x02\n      dup4\n      add\n        /* \"staking.sol\":3789:3808  user.rewardDebt = 0 */\n      sstore\n        /* \"staking.sol\":3851:3866  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3823:3848  user.lastDepositTimeStamp */\n      0x04\n      dup4\n      add\n        /* \"staking.sol\":3823:3866  user.lastDepositTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"staking.sol\":3881:3909  user.lastCalculatedTimeStamp */\n      0x03\n      dup4\n      add\n        /* \"staking.sol\":3881:3927  user.lastCalculatedTimeStamp = block.timestamp */\n      sstore\n        /* \"staking.sol\":3654:4137  if (isFirst) {\r... */\n      jump(tag_181)\n    tag_179:\n        /* \"staking.sol\":3986:3997  user.amount */\n      dup2\n      sload\n        /* \"staking.sol\":3986:4006  user.amount + amount */\n      tag_182\n      swap1\n        /* \"staking.sol\":4000:4006  amount */\n      dup5\n      swap1\n        /* \"staking.sol\":3986:4006  user.amount + amount */\n      tag_110\n      jump\t// in\n    tag_182:\n        /* \"staking.sol\":3972:4006  user.amount = user.amount + amount */\n      dup3\n      sstore\n        /* \"staking.sol\":4049:4064  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4021:4046  user.lastDepositTimeStamp */\n      0x04\n      dup4\n      add\n        /* \"staking.sol\":4021:4064  user.lastDepositTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"staking.sol\":4079:4107  user.lastCalculatedTimeStamp */\n      0x03\n      dup4\n      add\n        /* \"staking.sol\":4079:4125  user.lastCalculatedTimeStamp = block.timestamp */\n      sstore\n        /* \"staking.sol\":3654:4137  if (isFirst) {\r... */\n    tag_181:\n        /* \"staking.sol\":4175:4181  amount */\n      dup3\n        /* \"staking.sol\":4161:4172  totalAmount */\n      sload(0x02)\n        /* \"staking.sol\":4161:4181  totalAmount + amount */\n      tag_183\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_183:\n        /* \"staking.sol\":4147:4158  totalAmount */\n      0x02\n        /* \"staking.sol\":4147:4181  totalAmount = totalAmount + amount */\n      sstore\n        /* \"staking.sol\":4197:4224  Deposit(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6008:6033   */\n      dup4\n      dup2\n      mstore\n        /* \"staking.sol\":4205:4215  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":4197:4224  Deposit(msg.sender, amount) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap1\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"#utility.yul\":5981:5999   */\n      add\n        /* \"staking.sol\":4197:4224  Deposit(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking.sol\":3203:4232  function stake(uint256 amount) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_88:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_137\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3062:3083   */\n      mstore\n        /* \"#utility.yul\":3119:3121   */\n      0x26\n        /* \"#utility.yul\":3099:3117   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3092:3122   */\n      mstore\n        /* \"#utility.yul\":3158:3192   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3138:3156   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3131:3193   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3209:3227   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3202:3238   */\n      mstore\n        /* \"#utility.yul\":3255:3274   */\n      0x84\n      add\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_104\n        /* \"#utility.yul\":3052:3280   */\n      jump\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_193:\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_196\n        /* \"Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Ownable.sol\":2137:2155  _transferOwnership */\n      tag_157\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_196:\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":5595:5792  function transferToken(address _contractAddress, address _to, uint256 _amount) external onlyOwner {\r... */\n    tag_92:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_137\n      jump\t// in\n    tag_200:\n        /* \"staking.sol\":5755:5784  _token.transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      dup4\n      dup2\n      and\n        /* \"staking.sol\":5755:5784  _token.transfer(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2497:2515   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2490:2524   */\n      dup4\n      swap1\n      mstore\n        /* \"staking.sol\":5727:5743  _contractAddress */\n      dup5\n      swap2\n        /* \"staking.sol\":5755:5770  _token.transfer */\n      swap1\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2403:2421   */\n      0x44\n      add\n        /* \"staking.sol\":5755:5784  _token.transfer(_to, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      pop\n        /* \"Ownable.sol\":1354:1355  _ */\n      pop\n        /* \"staking.sol\":5595:5792  function transferToken(address _contractAddress, address _to, uint256 _amount) external onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1426:1536  function updateRewardTokenAddress(address _address) public onlyOwner {\r... */\n    tag_101:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_137\n      jump\t// in\n    tag_213:\n        /* \"staking.sol\":1506:1517  rewardToken */\n      0x05\n        /* \"staking.sol\":1506:1528  rewardToken = _address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":1426:1536  function updateRewardTokenAddress(address _address) public onlyOwner {\r... */\n      jump\t// out\n        /* \"staking.sol\":2638:3195  function updatePool() internal {\r... */\n    tag_115:\n        /* \"staking.sol\":2685:2691  uint i */\n      0x00\n        /* \"staking.sol\":2680:3188  for (uint i = 0; i < userList.length; i++) {\r... */\n    tag_217:\n        /* \"staking.sol\":2701:2709  userList */\n      0x08\n        /* \"staking.sol\":2701:2716  userList.length */\n      sload\n        /* \"staking.sol\":2697:2716  i < userList.length */\n      dup2\n      lt\n        /* \"staking.sol\":2680:3188  for (uint i = 0; i < userList.length; i++) {\r... */\n      iszero\n      tag_196\n      jumpi\n        /* \"staking.sol\":2738:2759  UserInfo storage user */\n      0x00\n        /* \"staking.sol\":2762:2770  userInfo */\n      0x07\n        /* \"staking.sol\":2762:2783  userInfo[userList[i]] */\n      0x00\n        /* \"staking.sol\":2771:2779  userList */\n      0x08\n        /* \"staking.sol\":2780:2781  i */\n      dup5\n        /* \"staking.sol\":2771:2782  userList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_220:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"staking.sol\":2762:2783  userInfo[userList[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"staking.sol\":2891:2919  user.lastCalculatedTimeStamp */\n      0x03\n      dup2\n      add\n      sload\n        /* \"staking.sol\":2762:2783  userInfo[userList[i]] */\n      swap1\n      swap3\n      pop\n        /* \"staking.sol\":2822:2837  block.timestamp */\n      timestamp\n      swap2\n        /* \"staking.sol\":2771:2782  userList[i] */\n      swap1\n        /* \"staking.sol\":2923:2929  1 days */\n      0x015180\n      swap1\n        /* \"staking.sol\":2875:2919  lastTimeStamp - user.lastCalculatedTimeStamp */\n      tag_222\n      swap1\n        /* \"staking.sol\":2822:2837  block.timestamp */\n      dup5\n        /* \"staking.sol\":2875:2919  lastTimeStamp - user.lastCalculatedTimeStamp */\n      tag_119\n      jump\t// in\n    tag_222:\n        /* \"staking.sol\":2874:2929  (lastTimeStamp - user.lastCalculatedTimeStamp) / 1 days */\n      tag_223\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_223:\n        /* \"staking.sol\":3007:3018  totalAmount */\n      sload(0x02)\n        /* \"staking.sol\":2993:3004  user.amount */\n      dup5\n      sload\n        /* \"staking.sol\":2976:2990  REWARD_PER_DAY */\n      sload(0x04)\n        /* \"staking.sol\":2852:2929  uint256 rewardedDay = (lastTimeStamp - user.lastCalculatedTimeStamp) / 1 days */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2944:2959  uint256 accDebt */\n      0x00\n      swap3\n        /* \"staking.sol\":2962:2990  rewardedDay * REWARD_PER_DAY */\n      tag_224\n      swap1\n        /* \"staking.sol\":2852:2929  uint256 rewardedDay = (lastTimeStamp - user.lastCalculatedTimeStamp) / 1 days */\n      dup6\n        /* \"staking.sol\":2962:2990  rewardedDay * REWARD_PER_DAY */\n      tag_147\n      jump\t// in\n    tag_224:\n        /* \"staking.sol\":2962:3004  rewardedDay * REWARD_PER_DAY * user.amount */\n      tag_225\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_225:\n        /* \"staking.sol\":2962:3018  rewardedDay * REWARD_PER_DAY * user.amount / totalAmount */\n      tag_226\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_226:\n        /* \"staking.sol\":3051:3066  user.rewardDebt */\n      0x02\n      dup6\n      add\n      sload\n        /* \"staking.sol\":2944:3018  uint256 accDebt = rewardedDay * REWARD_PER_DAY * user.amount / totalAmount */\n      swap1\n      swap2\n      pop\n        /* \"staking.sol\":3051:3079  user.rewardDebt.add(accDebt) */\n      tag_227\n      swap1\n        /* \"staking.sol\":2944:3018  uint256 accDebt = rewardedDay * REWARD_PER_DAY * user.amount / totalAmount */\n      dup3\n        /* \"staking.sol\":3051:3070  user.rewardDebt.add */\n      tag_228\n        /* \"staking.sol\":3051:3079  user.rewardDebt.add(accDebt) */\n      jump\t// in\n    tag_227:\n        /* \"staking.sol\":3033:3048  user.rewardDebt */\n      0x02\n      dup6\n      add\n        /* \"staking.sol\":3033:3079  user.rewardDebt = user.rewardDebt.add(accDebt) */\n      sstore\n        /* \"staking.sol\":3156:3176  rewardedDay * 1 days */\n      tag_229\n        /* \"staking.sol\":3156:3167  rewardedDay */\n      dup3\n        /* \"staking.sol\":3170:3176  1 days */\n      0x015180\n        /* \"staking.sol\":3156:3176  rewardedDay * 1 days */\n      tag_147\n      jump\t// in\n    tag_229:\n        /* \"staking.sol\":3125:3129  user */\n      dup5\n        /* \"staking.sol\":3125:3153  user.lastCalculatedTimeStamp */\n      0x03\n      add\n      sload\n        /* \"staking.sol\":3125:3176  user.lastCalculatedTimeStamp + rewardedDay * 1 days */\n      tag_230\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_230:\n        /* \"staking.sol\":3094:3098  user */\n      dup5\n        /* \"staking.sol\":3094:3122  user.lastCalculatedTimeStamp */\n      0x03\n      add\n        /* \"staking.sol\":3094:3176  user.lastCalculatedTimeStamp = user.lastCalculatedTimeStamp + rewardedDay * 1 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2680:3188  for (uint i = 0; i < userList.length; i++) {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":2718:2721  i++ */\n      dup1\n      dup1\n      tag_231\n      swap1\n      tag_177\n      jump\t// in\n    tag_231:\n      swap2\n      pop\n      pop\n        /* \"staking.sol\":2680:3188  for (uint i = 0; i < userList.length; i++) {\r... */\n      jump(tag_217)\n        /* \"TransferHelper.sol\":671:1120  function safeTransfer(\r... */\n    tag_117:\n        /* \"TransferHelper.sol\":903:948  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      dup5\n      dup2\n      and\n        /* \"TransferHelper.sol\":903:948  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2497:2515   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2490:2524   */\n      dup6\n      swap1\n      mstore\n        /* \"TransferHelper.sol\":903:948  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"TransferHelper.sol\":903:948  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"TransferHelper.sol\":892:949  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"TransferHelper.sol\":892:902  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"TransferHelper.sol\":892:949  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_234\n      swap2\n        /* \"TransferHelper.sol\":903:948  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"TransferHelper.sol\":892:949  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_235\n      jump\t// in\n    tag_234:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_238\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_237)\n    tag_238:\n      0x60\n      swap2\n      pop\n    tag_237:\n      pop\n        /* \"TransferHelper.sol\":856:949  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"TransferHelper.sol\":982:989  success */\n      dup2\n        /* \"TransferHelper.sol\":982:1039  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n        /* \"TransferHelper.sol\":994:1005  data.length */\n      dup1\n      mload\n        /* \"TransferHelper.sol\":994:1010  data.length == 0 */\n      iszero\n      dup1\n        /* \"TransferHelper.sol\":994:1038  data.length == 0 || abi.decode(data, (bool)) */\n      tag_241\n      jumpi\n      pop\n        /* \"TransferHelper.sol\":1025:1029  data */\n      dup1\n        /* \"TransferHelper.sol\":1014:1038  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_241:\n        /* \"TransferHelper.sol\":960:1112  require(\r... */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4958:4960   */\n      0x20\n        /* \"TransferHelper.sol\":960:1112  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4940:4961   */\n      mstore\n        /* \"#utility.yul\":4997:4999   */\n      0x2d\n        /* \"#utility.yul\":4977:4995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4970:5000   */\n      mstore\n        /* \"#utility.yul\":5036:5070   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665723a207472\n        /* \"#utility.yul\":5016:5034   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5009:5071   */\n      mstore\n      shl(0x9a, 0x185b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":5087:5105   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5080:5123   */\n      mstore\n        /* \"#utility.yul\":5140:5159   */\n      0x84\n      add\n        /* \"TransferHelper.sol\":960:1112  require(\r... */\n      tag_104\n        /* \"#utility.yul\":4930:5165   */\n      jump\n        /* \"staking.sol\":4240:4647  function deleteBlock() internal {\r... */\n    tag_121:\n        /* \"staking.sol\":4283:4294  bool isUser */\n      0x00\n        /* \"staking.sol\":4317:4326  uint256 i */\n      dup1\n        /* \"staking.sol\":4313:4615  for(uint256 i = 0 ; i < userList.length - 1 ; i ++){\r... */\n    tag_246:\n        /* \"staking.sol\":4337:4345  userList */\n      0x08\n        /* \"staking.sol\":4337:4352  userList.length */\n      sload\n        /* \"staking.sol\":4337:4356  userList.length - 1 */\n      tag_249\n      swap1\n        /* \"staking.sol\":4355:4356  1 */\n      0x01\n      swap1\n        /* \"staking.sol\":4337:4356  userList.length - 1 */\n      tag_119\n      jump\t// in\n    tag_249:\n        /* \"staking.sol\":4333:4334  i */\n      dup2\n        /* \"staking.sol\":4333:4356  i < userList.length - 1 */\n      lt\n        /* \"staking.sol\":4313:4615  for(uint256 i = 0 ; i < userList.length - 1 ; i ++){\r... */\n      iszero\n      tag_247\n      jumpi\n        /* \"staking.sol\":4397:4407  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4382:4407  userList[i] == msg.sender */\n      and\n        /* \"staking.sol\":4382:4390  userList */\n      0x08\n        /* \"staking.sol\":4391:4392  i */\n      dup3\n        /* \"staking.sol\":4382:4393  userList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_250\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_250:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"staking.sol\":4382:4407  userList[i] == msg.sender */\n      eq\n        /* \"staking.sol\":4379:4483  if(userList[i] == msg.sender){\r... */\n      iszero\n      tag_252\n      jumpi\n        /* \"staking.sol\":4436:4440  true */\n      0x01\n        /* \"staking.sol\":4427:4440  isUser = true */\n      swap2\n      pop\n        /* \"staking.sol\":4459:4467  continue */\n      jump(tag_248)\n        /* \"staking.sol\":4379:4483  if(userList[i] == msg.sender){\r... */\n    tag_252:\n        /* \"staking.sol\":4500:4515  isUser == false */\n      dup2\n        /* \"staking.sol\":4497:4560  if(isUser == false) {\r... */\n      tag_253\n      jumpi\n        /* \"staking.sol\":4536:4544  continue */\n      jump(tag_248)\n        /* \"staking.sol\":4497:4560  if(isUser == false) {\r... */\n    tag_253:\n        /* \"staking.sol\":4588:4596  userList */\n      0x08\n        /* \"staking.sol\":4597:4602  i + 1 */\n      tag_254\n        /* \"staking.sol\":4597:4598  i */\n      dup3\n        /* \"staking.sol\":4601:4602  1 */\n      0x01\n        /* \"staking.sol\":4597:4602  i + 1 */\n      tag_110\n      jump\t// in\n    tag_254:\n        /* \"staking.sol\":4588:4603  userList[i + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_255\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_255:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"staking.sol\":4574:4582  userList */\n      0x08\n        /* \"staking.sol\":4574:4585  userList[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4588:4603  userList[i + 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"staking.sol\":4583:4584  i */\n      dup4\n      swap1\n        /* \"staking.sol\":4574:4585  userList[i] */\n      dup2\n      lt\n      tag_257\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_257:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"staking.sol\":4574:4603  userList[i] = userList[i + 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":4313:4615  for(uint256 i = 0 ; i < userList.length - 1 ; i ++){\r... */\n    tag_248:\n        /* \"staking.sol\":4359:4363  i ++ */\n      dup1\n      tag_259\n      dup2\n      tag_177\n      jump\t// in\n    tag_259:\n      swap2\n      pop\n      pop\n        /* \"staking.sol\":4313:4615  for(uint256 i = 0 ; i < userList.length - 1 ; i ++){\r... */\n      jump(tag_246)\n    tag_247:\n      pop\n        /* \"staking.sol\":4625:4633  userList */\n      0x08\n        /* \"staking.sol\":4625:4639  userList.pop() */\n      dup1\n      sload\n      dup1\n      tag_260\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_260:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":4240:4647  function deleteBlock() internal {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_157:\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2426:2432  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Ownable.sol\":2426:2432  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      swap1\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"TransferHelper.sol\":1128:1626  function safeTransferFrom(\r... */\n    tag_169:\n        /* \"TransferHelper.sol\":1399:1450  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2134:2149   */\n      dup6\n      dup2\n      and\n        /* \"TransferHelper.sol\":1399:1450  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2116:2150   */\n      mstore\n        /* \"#utility.yul\":2186:2201   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":2166:2184   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":2159:2202   */\n      mstore\n        /* \"#utility.yul\":2218:2236   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2211:2245   */\n      dup6\n      swap1\n      mstore\n        /* \"TransferHelper.sol\":1399:1450  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2051:2069   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"TransferHelper.sol\":1399:1450  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"TransferHelper.sol\":1388:1451  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"TransferHelper.sol\":1388:1398  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"TransferHelper.sol\":1388:1451  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_267\n      swap2\n        /* \"TransferHelper.sol\":1399:1450  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"TransferHelper.sol\":1388:1451  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_235\n      jump\t// in\n    tag_267:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_270\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_269)\n    tag_270:\n      0x60\n      swap2\n      pop\n    tag_269:\n      pop\n        /* \"TransferHelper.sol\":1352:1451  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"TransferHelper.sol\":1484:1491  success */\n      dup2\n        /* \"TransferHelper.sol\":1484:1541  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_273\n      jumpi\n      pop\n        /* \"TransferHelper.sol\":1496:1507  data.length */\n      dup1\n      mload\n        /* \"TransferHelper.sol\":1496:1512  data.length == 0 */\n      iszero\n      dup1\n        /* \"TransferHelper.sol\":1496:1540  data.length == 0 || abi.decode(data, (bool)) */\n      tag_273\n      jumpi\n      pop\n        /* \"TransferHelper.sol\":1527:1531  data */\n      dup1\n        /* \"TransferHelper.sol\":1516:1540  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_273:\n        /* \"TransferHelper.sol\":1462:1618  require(\r... */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3487:3489   */\n      0x20\n        /* \"TransferHelper.sol\":1462:1618  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3469:3490   */\n      mstore\n        /* \"#utility.yul\":3526:3528   */\n      0x31\n        /* \"#utility.yul\":3506:3524   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3499:3529   */\n      mstore\n        /* \"#utility.yul\":3565:3599   */\n      0x5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472\n        /* \"#utility.yul\":3545:3563   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3538:3600   */\n      mstore\n      shl(0x7a, 0x185b9cd9995c919c9bdb4819985a5b1959)\n        /* \"#utility.yul\":3616:3634   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3609:3656   */\n      mstore\n        /* \"#utility.yul\":3673:3692   */\n      0x84\n      add\n        /* \"TransferHelper.sol\":1462:1618  require(\r... */\n      tag_104\n        /* \"#utility.yul\":3459:3698   */\n      jump\n        /* \"TransferHelper.sol\":1462:1618  require(\r... */\n    tag_274:\n        /* \"TransferHelper.sol\":1128:1626  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":2847:2945  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_228:\n        /* \"SafeMath.sol\":2905:2912  uint256 */\n      0x00\n        /* \"SafeMath.sol\":2932:2937  a + b */\n      tag_278\n        /* \"SafeMath.sol\":2936:2937  b */\n      dup3\n        /* \"SafeMath.sol\":2932:2933  a */\n      dup5\n        /* \"SafeMath.sol\":2932:2937  a + b */\n      tag_110\n      jump\t// in\n    tag_278:\n        /* \"SafeMath.sol\":2925:2937  return a + b */\n      swap4\n        /* \"SafeMath.sol\":2847:2945  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_280:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_282:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_30:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_284:\n        /* \"#utility.yul\":353:382   */\n      tag_278\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_280\n      jump\t// in\n        /* \"#utility.yul\":393:731   */\n    tag_91:\n        /* \"#utility.yul\":470:476   */\n      0x00\n        /* \"#utility.yul\":478:484   */\n      dup1\n        /* \"#utility.yul\":486:492   */\n      0x00\n        /* \"#utility.yul\":539:541   */\n      0x60\n        /* \"#utility.yul\":527:536   */\n      dup5\n        /* \"#utility.yul\":518:525   */\n      dup7\n        /* \"#utility.yul\":514:537   */\n      sub\n        /* \"#utility.yul\":510:542   */\n      slt\n        /* \"#utility.yul\":507:509   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":560:566   */\n      dup2\n        /* \"#utility.yul\":552:558   */\n      dup3\n        /* \"#utility.yul\":545:567   */\n      revert\n        /* \"#utility.yul\":507:509   */\n    tag_287:\n        /* \"#utility.yul\":588:617   */\n      tag_288\n        /* \"#utility.yul\":607:616   */\n      dup5\n        /* \"#utility.yul\":588:617   */\n      tag_280\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":578:617   */\n      swap3\n      pop\n        /* \"#utility.yul\":636:674   */\n      tag_289\n        /* \"#utility.yul\":670:672   */\n      0x20\n        /* \"#utility.yul\":659:668   */\n      dup6\n        /* \"#utility.yul\":655:673   */\n      add\n        /* \"#utility.yul\":636:674   */\n      tag_280\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":626:674   */\n      swap2\n      pop\n        /* \"#utility.yul\":721:723   */\n      0x40\n        /* \"#utility.yul\":710:719   */\n      dup5\n        /* \"#utility.yul\":706:724   */\n      add\n        /* \"#utility.yul\":693:725   */\n      calldataload\n        /* \"#utility.yul\":683:725   */\n      swap1\n      pop\n        /* \"#utility.yul\":497:731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":736:1033   */\n    tag_209:\n        /* \"#utility.yul\":803:809   */\n      0x00\n        /* \"#utility.yul\":856:858   */\n      0x20\n        /* \"#utility.yul\":844:853   */\n      dup3\n        /* \"#utility.yul\":835:842   */\n      dup5\n        /* \"#utility.yul\":831:854   */\n      sub\n        /* \"#utility.yul\":827:859   */\n      slt\n        /* \"#utility.yul\":824:826   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":877:883   */\n      dup1\n        /* \"#utility.yul\":869:875   */\n      dup2\n        /* \"#utility.yul\":862:884   */\n      revert\n        /* \"#utility.yul\":824:826   */\n    tag_291:\n        /* \"#utility.yul\":914:923   */\n      dup2\n        /* \"#utility.yul\":908:924   */\n      mload\n        /* \"#utility.yul\":967:972   */\n      dup1\n        /* \"#utility.yul\":960:973   */\n      iszero\n        /* \"#utility.yul\":953:974   */\n      iszero\n        /* \"#utility.yul\":946:951   */\n      dup2\n        /* \"#utility.yul\":943:975   */\n      eq\n        /* \"#utility.yul\":933:935   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":994:1000   */\n      dup2\n        /* \"#utility.yul\":986:992   */\n      dup3\n        /* \"#utility.yul\":979:1001   */\n      revert\n        /* \"#utility.yul\":1038:1228   */\n    tag_54:\n        /* \"#utility.yul\":1097:1103   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1120   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1171:1177   */\n      dup1\n        /* \"#utility.yul\":1163:1169   */\n      dup2\n        /* \"#utility.yul\":1156:1178   */\n      revert\n        /* \"#utility.yul\":1118:1120   */\n    tag_294:\n      pop\n        /* \"#utility.yul\":1199:1222   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1108:1228   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1233:1663   */\n    tag_235:\n        /* \"#utility.yul\":1362:1365   */\n      0x00\n        /* \"#utility.yul\":1400:1406   */\n      dup3\n        /* \"#utility.yul\":1394:1407   */\n      mload\n        /* \"#utility.yul\":1425:1428   */\n      dup2\n        /* \"#utility.yul\":1437:1566   */\n    tag_296:\n        /* \"#utility.yul\":1451:1457   */\n      dup2\n        /* \"#utility.yul\":1448:1449   */\n      dup2\n        /* \"#utility.yul\":1445:1458   */\n      lt\n        /* \"#utility.yul\":1437:1566   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1549:1553   */\n      0x20\n        /* \"#utility.yul\":1533:1547   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":1529:1554   */\n      dup2\n      add\n        /* \"#utility.yul\":1523:1555   */\n      mload\n        /* \"#utility.yul\":1510:1521   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1503:1556   */\n      mstore\n        /* \"#utility.yul\":1466:1478   */\n      add\n        /* \"#utility.yul\":1437:1566   */\n      jump(tag_296)\n    tag_298:\n        /* \"#utility.yul\":1584:1590   */\n      dup2\n        /* \"#utility.yul\":1581:1582   */\n      dup2\n        /* \"#utility.yul\":1578:1591   */\n      gt\n        /* \"#utility.yul\":1575:1577   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1619:1622   */\n      dup3\n        /* \"#utility.yul\":1610:1616   */\n      dup3\n        /* \"#utility.yul\":1605:1608   */\n      dup6\n        /* \"#utility.yul\":1601:1617   */\n      add\n        /* \"#utility.yul\":1594:1623   */\n      mstore\n        /* \"#utility.yul\":1575:1577   */\n    tag_299:\n      pop\n        /* \"#utility.yul\":1641:1657   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1370:1663   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4042:4398   */\n    tag_137:\n        /* \"#utility.yul\":4244:4246   */\n      0x20\n        /* \"#utility.yul\":4226:4247   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4263:4281   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4256:4286   */\n      mstore\n        /* \"#utility.yul\":4322:4356   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4317:4319   */\n      0x40\n        /* \"#utility.yul\":4302:4320   */\n      dup3\n      add\n        /* \"#utility.yul\":4295:4357   */\n      mstore\n        /* \"#utility.yul\":4389:4391   */\n      0x60\n        /* \"#utility.yul\":4374:4392   */\n      add\n      swap1\n        /* \"#utility.yul\":4216:4398   */\n      jump\t// out\n        /* \"#utility.yul\":6512:6640   */\n    tag_110:\n        /* \"#utility.yul\":6552:6555   */\n      0x00\n        /* \"#utility.yul\":6583:6584   */\n      dup3\n        /* \"#utility.yul\":6579:6585   */\n      not\n        /* \"#utility.yul\":6576:6577   */\n      dup3\n        /* \"#utility.yul\":6573:6586   */\n      gt\n        /* \"#utility.yul\":6570:6572   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":6589:6607   */\n      tag_316\n      tag_317\n      jump\t// in\n    tag_316:\n      pop\n        /* \"#utility.yul\":6625:6634   */\n      add\n      swap1\n        /* \"#utility.yul\":6560:6640   */\n      jump\t// out\n        /* \"#utility.yul\":6645:6862   */\n    tag_145:\n        /* \"#utility.yul\":6685:6686   */\n      0x00\n        /* \"#utility.yul\":6711:6712   */\n      dup3\n        /* \"#utility.yul\":6701:6703   */\n      tag_319\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6736:6767   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6790:6794   */\n      0x12\n        /* \"#utility.yul\":6787:6788   */\n      0x04\n        /* \"#utility.yul\":6780:6795   */\n      mstore\n        /* \"#utility.yul\":6818:6822   */\n      0x24\n        /* \"#utility.yul\":6743:6744   */\n      dup2\n        /* \"#utility.yul\":6808:6823   */\n      revert\n        /* \"#utility.yul\":6701:6703   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":6847:6856   */\n      div\n      swap1\n        /* \"#utility.yul\":6691:6862   */\n      jump\t// out\n        /* \"#utility.yul\":6867:7035   */\n    tag_147:\n        /* \"#utility.yul\":6907:6914   */\n      0x00\n        /* \"#utility.yul\":6973:6974   */\n      dup2\n        /* \"#utility.yul\":6969:6970   */\n      0x00\n        /* \"#utility.yul\":6965:6971   */\n      not\n        /* \"#utility.yul\":6961:6975   */\n      div\n        /* \"#utility.yul\":6958:6959   */\n      dup4\n        /* \"#utility.yul\":6955:6976   */\n      gt\n        /* \"#utility.yul\":6950:6951   */\n      dup3\n        /* \"#utility.yul\":6943:6952   */\n      iszero\n        /* \"#utility.yul\":6936:6953   */\n      iszero\n        /* \"#utility.yul\":6932:6977   */\n      and\n        /* \"#utility.yul\":6929:6931   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6980:6998   */\n      tag_322\n      tag_317\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":7020:7029   */\n      mul\n      swap1\n        /* \"#utility.yul\":6919:7035   */\n      jump\t// out\n        /* \"#utility.yul\":7040:7165   */\n    tag_119:\n        /* \"#utility.yul\":7080:7084   */\n      0x00\n        /* \"#utility.yul\":7108:7109   */\n      dup3\n        /* \"#utility.yul\":7105:7106   */\n      dup3\n        /* \"#utility.yul\":7102:7110   */\n      lt\n        /* \"#utility.yul\":7099:7101   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":7113:7131   */\n      tag_325\n      tag_317\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":7150:7159   */\n      sub\n      swap1\n        /* \"#utility.yul\":7089:7165   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7305   */\n    tag_177:\n        /* \"#utility.yul\":7209:7212   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":7230:7247   */\n      dup3\n      eq\n        /* \"#utility.yul\":7227:7229   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":7250:7268   */\n      tag_328\n      tag_317\n      jump\t// in\n    tag_328:\n      pop\n        /* \"#utility.yul\":7297:7298   */\n      0x01\n        /* \"#utility.yul\":7286:7299   */\n      add\n      swap1\n        /* \"#utility.yul\":7217:7305   */\n      jump\t// out\n        /* \"#utility.yul\":7310:7437   */\n    tag_317:\n        /* \"#utility.yul\":7371:7381   */\n      0x4e487b71\n        /* \"#utility.yul\":7366:7369   */\n      0xe0\n        /* \"#utility.yul\":7362:7382   */\n      shl\n        /* \"#utility.yul\":7359:7360   */\n      0x00\n        /* \"#utility.yul\":7352:7383   */\n      mstore\n        /* \"#utility.yul\":7402:7406   */\n      0x11\n        /* \"#utility.yul\":7399:7400   */\n      0x04\n        /* \"#utility.yul\":7392:7407   */\n      mstore\n        /* \"#utility.yul\":7426:7430   */\n      0x24\n        /* \"#utility.yul\":7423:7424   */\n      0x00\n        /* \"#utility.yul\":7416:7431   */\n      revert\n\n    auxdata: 0xa2646970667358221220318168315ec279809740bd259d5f30399395bd5231492090e62487c909e388df64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:501:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nodeType": "YulIf",
															"src": "115:2:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:205:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "349:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "357:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nodeType": "YulIf",
															"src": "304:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "375:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "415:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "385:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "434:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "478:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "489:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "444:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:303:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269d3c21bcecceda1000000600455624f1a006009556001600a553480156200002b57600080fd5b50604051620012ae380380620012ae8339810160408190526200004e9162000119565b6200005933620000ac565b60068054336001600160a01b031991821681179092556001805482166001600160a01b0386811691909117909155600580549092169084161790556000600255620000a490620000ac565b505062000150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011457600080fd5b919050565b600080604083850312156200012c578182fd5b6200013783620000fc565b91506200014760208401620000fc565b90509250929050565b61114e80620001606000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639674a0ac116100b8578063f0c37a591161007c578063f0c37a59146102aa578063f2fde38b146102b2578063f5537ede146102c5578063f7c618c1146102d8578063fc6f9468146102eb578063fd1a2397146102fe57600080fd5b80639674a0ac146102605780639f4216e814610273578063a694fc3a14610286578063a8b3820514610299578063bce4f054146102a257600080fd5b80635fcbd2851161010a5780635fcbd285146101e35780635fd595c01461020e5780636a9db411146102215780636e26a96714610234578063715018a6146102475780638da5cb5b1461024f57600080fd5b80631959a002146101475780631a39d8ef146101b1578063356c7284146101c85780633ccfd60b146101d15780634e71d92d146101db575b600080fd5b610184610155366004610f7e565b600760205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b6101ba60025481565b6040519081526020016101a8565b6101ba60035481565b6101d9610311565b005b6101d961046f565b6001546101f6906001600160a01b031681565b6040516001600160a01b0390911681526020016101a8565b6101d961021c366004610f7e565b610544565b6101ba61022f366004610ff3565b610590565b6101ba610242366004610f7e565b6105e4565b6101d9610656565b6000546001600160a01b03166101f6565b6101f661026e366004610ff3565b61068c565b6101f6610281366004610ff3565b6106ca565b6101d9610294366004610ff3565b6106f4565b6101ba60095481565b6002546101ba565b6008546101ba565b6101d96102c0366004610f7e565b6108a2565b6101d96102d3366004610f98565b61093d565b6005546101f6906001600160a01b031681565b6006546101f6906001600160a01b031681565b6101d961030c366004610f7e565b6109f3565b33600090815260076020526040902060048101546103655760405162461bcd60e51b815260206004820152600c60248201526b34b73b30b634b2103ab9b2b960a11b60448201526064015b60405180910390fd5b80546103a05760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b604482015260640161035c565b4260095482600401546103b39190611079565b106103f95760405162461bcd60e51b81526020600482015260166024820152753cb7ba9030b9329034b7103637b1b5b2b22a34b6b29760511b604482015260640161035c565b610401610a3f565b600154815461041b916001600160a01b0316903390610b39565b805460025461042a91906110d0565b600255610435610c63565b805460405190815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b336000908152600760205260409020610486610a3f565b6002810154806104d85760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f7567682072657761726420616d6f756e740000000000000000604482015260640161035c565b8082600101546104e89190611079565b60018301556000600283015560055461050b906001600160a01b03163383610b39565b60405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc99060200160405180910390a25050565b6000546001600160a01b0316331461056e5760405162461bcd60e51b815260040161035c90611044565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008060076000600885815481106105b857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020549392505050565b6001600160a01b03811660009081526007602052604081206003810154429083908190620151809061061690856110d0565b6106209190611091565b905060025460045485600001548361063891906110b1565b61064291906110b1565b61064c9190611091565b9695505050505050565b6000546001600160a01b031633146106805760405162461bcd60e51b815260040161035c90611044565b61068a6000610dc1565b565b6000600882815481106106af57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b600881815481106106da57600080fd5b6000918252602090912001546001600160a01b0316905081565b600081116107355760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985a5b1908185b5bdd5b9d60921b604482015260640161035c565b60015461074d906001600160a01b0316333084610e11565b336000908152600760205260408120906001905b6008548110156107c857336001600160a01b03166008828154811061079657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156107b657600091505b806107c0816110e7565b915050610761565b506107d1610a3f565b801561083a57600880546001818101835560009283527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390910180546001600160a01b031916331790558484558301819055600283015542600483018190556003830155610857565b8154610847908490611079565b8255426004830181905560038301555b826002546108659190611079565b60025560405183815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2505050565b6000546001600160a01b031633146108cc5760405162461bcd60e51b815260040161035c90611044565b6001600160a01b0381166109315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035c565b61093a81610dc1565b50565b6000546001600160a01b031633146109675760405162461bcd60e51b815260040161035c90611044565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284919082169063a9059cbb90604401602060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190610fd3565b5050505050565b6000546001600160a01b03163314610a1d5760405162461bcd60e51b815260040161035c90611044565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60005b60085481101561093a5760006007600060088481548110610a7357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001812060038101549092504291906201518090610ab190846110d0565b610abb9190611091565b6002548454600454929350600092610ad390856110b1565b610add91906110b1565b610ae79190611091565b6002850154909150610af99082610f4f565b6002850155610b0b82620151806110b1565b8460030154610b1a9190611079565b8460030181905550505050508080610b31906110e7565b915050610a42565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610b95919061100b565b6000604051808303816000865af19150503d8060008114610bd2576040519150601f19603f3d011682016040523d82523d6000602084013e610bd7565b606091505b5091509150818015610c01575080511580610c01575080806020019051810190610c019190610fd3565b6109ec5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b606482015260840161035c565b6000805b600854610c76906001906110d0565b811015610d7c57336001600160a01b031660088281548110610ca857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610ccc5760019150610d6a565b81610cd657610d6a565b6008610ce3826001611079565b81548110610d0157634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600880546001600160a01b039092169183908110610d3b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b80610d74816110e7565b915050610c67565b506008805480610d9c57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b031916905501905550565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610e75919061100b565b6000604051808303816000865af19150503d8060008114610eb2576040519150601f19603f3d011682016040523d82523d6000602084013e610eb7565b606091505b5091509150818015610ee1575080511580610ee1575080806020019051810190610ee19190610fd3565b610f475760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b606482015260840161035c565b505050505050565b6000610f5b8284611079565b9392505050565b80356001600160a01b0381168114610f7957600080fd5b919050565b600060208284031215610f8f578081fd5b610f5b82610f62565b600080600060608486031215610fac578182fd5b610fb584610f62565b9250610fc360208501610f62565b9150604084013590509250925092565b600060208284031215610fe4578081fd5b81518015158114610f5b578182fd5b600060208284031215611004578081fd5b5035919050565b60008251815b8181101561102b5760208186018101518583015201611011565b818111156110395782828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561108c5761108c611102565b500190565b6000826110ac57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110cb576110cb611102565b500290565b6000828210156110e2576110e2611102565b500390565b60006000198214156110fb576110fb611102565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220318168315ec279809740bd259d5f30399395bd5231492090e62487c909e388df64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x4 SSTORE PUSH3 0x4F1A00 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12AE CODESIZE SUB DUP1 PUSH3 0x12AE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4E SWAP2 PUSH3 0x119 JUMP JUMPDEST PUSH3 0x59 CALLER PUSH3 0xAC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH3 0xA4 SWAP1 PUSH3 0xAC JUMP JUMPDEST POP POP PUSH3 0x150 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x137 DUP4 PUSH3 0xFC JUMP JUMPDEST SWAP2 POP PUSH3 0x147 PUSH1 0x20 DUP5 ADD PUSH3 0xFC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x114E DUP1 PUSH3 0x160 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9674A0AC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF0C37A59 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xFD1A2397 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9674A0AC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9F4216E8 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xA8B38205 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xBCE4F054 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5FCBD285 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5FD595C0 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x6A9DB411 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6E26A967 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x356C7284 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x34B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081CDD185AD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST LT PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x3CB7BA9030B9329034B7103637B1B5B2B22A34B6B297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST PUSH2 0x401 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 SLOAD PUSH2 0x41B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH2 0xB39 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x435 PUSH2 0xC63 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x486 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP1 PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682072657761726420616D6F756E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x5 SLOAD PUSH2 0x50B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD TIMESTAMP SWAP1 DUP4 SWAP1 DUP2 SWAP1 PUSH3 0x15180 SWAP1 PUSH2 0x616 SWAP1 DUP6 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD DUP6 PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0x68A PUSH1 0x0 PUSH2 0xDC1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985A5B1908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x74D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0xE11 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x7C8 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x796 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST DUP1 PUSH2 0x7C0 DUP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x761 JUMP JUMPDEST POP PUSH2 0x7D1 PUSH2 0xA3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP5 DUP5 SSTORE DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x857 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x847 SWAP1 DUP5 SWAP1 PUSH2 0x1079 JUMP JUMPDEST DUP3 SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST DUP3 PUSH1 0x2 SLOAD PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35C JUMP JUMPDEST PUSH2 0x93A DUP2 PUSH2 0xDC1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 POP TIMESTAMP SWAP2 SWAP1 PUSH3 0x15180 SWAP1 PUSH2 0xAB1 SWAP1 DUP5 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP5 SLOAD PUSH1 0x4 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0xAD3 SWAP1 DUP6 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xAF9 SWAP1 DUP3 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0xB0B DUP3 PUSH3 0x15180 PUSH2 0x10B1 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0xB31 SWAP1 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC01 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xC01 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35C JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xC76 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xD7C JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCCC JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xD6A JUMP JUMPDEST DUP2 PUSH2 0xCD6 JUMPI PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x8 PUSH2 0xCE3 DUP3 PUSH1 0x1 PUSH2 0x1079 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD01 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH2 0xD74 DUP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC67 JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0xD9C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xEE1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xEE1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x185B9CD9995C919C9BDB4819985A5B1959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP3 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xF5B DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFAC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xFB5 DUP5 PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP PUSH2 0xFC3 PUSH1 0x20 DUP6 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF5B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1004 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x102B JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1011 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1039 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x108C JUMPI PUSH2 0x108C PUSH2 0x1102 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x1102 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E2 JUMPI PUSH2 0x10E2 PUSH2 0x1102 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x1102 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP2 PUSH9 0x315EC279809740BD25 SWAP14 0x5F ADDRESS CODECOPY SWAP4 SWAP6 0xBD MSTORE BALANCE 0x49 KECCAK256 SWAP1 0xE6 0x24 DUP8 0xC9 MULMOD 0xE3 DUP9 0xDF PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "169:5626:5:-:0;;;591:14;558:47;;916:14;888:42;;971:1;947:25;;1157:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;942:32:2;736:10:0;942:18:2;:32::i;:::-;1252:12:5;:25;;1267:10;-1:-1:-1;;;;;;1252:25:5;;;;;;;;-1:-1:-1;1288:18:5;;;;-1:-1:-1;;;;;1288:18:5;;;;;;;;;;-1:-1:-1;1317:26:5;;;;;;;;;;;-1:-1:-1;1354:11:5;:15;1380:30;;:18;:30::i;:::-;1157:261;;169:5626;;2333:191:2;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:2;;;-1:-1:-1;;;;;;2443:17:2;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;14:177:6:-;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;:::-;169:5626:5;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7439:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:2:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:196:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:234:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "543:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "552:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "560:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "545:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "527:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "514:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "539:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:32:6"
															},
															"nodeType": "YulIf",
															"src": "507:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "578:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "607:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "588:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "578:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "626:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "659:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "670:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "655:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "655:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "636:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "683:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "710:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "721:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "706:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "706:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "693:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "447:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "458:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "470:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "478:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "486:6:6",
														"type": ""
													}
												],
												"src": "393:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:219:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "860:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "869:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "877:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "862:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "862:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "862:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "835:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "844:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "831:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "831:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:32:6"
															},
															"nodeType": "YulIf",
															"src": "824:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "895:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "914:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "908:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "899:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "986:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "994:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "946:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "967:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "960:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "960:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "953:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "953:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "943:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "936:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:40:6"
															},
															"nodeType": "YulIf",
															"src": "933:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1012:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1022:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1012:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "780:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "791:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "803:6:6",
														"type": ""
													}
												],
												"src": "736:297:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:120:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1163:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1171:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1156:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:6"
															},
															"nodeType": "YulIf",
															"src": "1118:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1189:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1199:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1074:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1085:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													}
												],
												"src": "1038:190:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1370:293:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1380:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1400:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1394:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1384:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1416:12:6",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "1425:3:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1420:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1489:77:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1514:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1519:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1510:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1510:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1537:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1545:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1533:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1533:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1549:4:6",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1529:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1529:25:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1523:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1523:32:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1503:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1503:53:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1503:53:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1448:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1451:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1445:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1459:21:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1461:17:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1470:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1466:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1461:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1441:3:6",
																"statements": []
															},
															"src": "1437:129:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1592:33:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1605:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1610:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1601:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1601:16:6"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "1619:3:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1594:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1594:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1594:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1581:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1584:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:13:6"
															},
															"nodeType": "YulIf",
															"src": "1575:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1634:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1645:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1346:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1351:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1362:3:6",
														"type": ""
													}
												],
												"src": "1233:430:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1779:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1821:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1852:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1857:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1848:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1848:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1861:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1844:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1844:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1814:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1738:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1749:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1760:4:6",
														"type": ""
													}
												],
												"src": "1668:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2033:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2043:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2051:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2043:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2078:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2096:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2101:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2092:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2092:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2082:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2123:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2138:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2146:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2134:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2116:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2181:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2166:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2190:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2198:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2186:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2159:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2159:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2233:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2211:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1986:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1997:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2013:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2024:4:6",
														"type": ""
													}
												],
												"src": "1876:375:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2385:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2395:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2501:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2512:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2497:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2490:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2357:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2365:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2376:4:6",
														"type": ""
													}
												],
												"src": "2256:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2709:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2726:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2737:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2719:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2760:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2776:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2749:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2799:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2810:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2795:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2795:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2815:16:6",
																		"type": "",
																		"value": "invaild amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2788:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2788:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2853:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2864:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2841:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_117e28c1605b64da1169008bcd4bb6303a577bc5202f105735275c9b0f921425__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2686:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2700:4:6",
														"type": ""
													}
												],
												"src": "2535:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3052:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3069:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3080:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3062:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3103:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3114:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3099:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3119:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3092:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3092:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3153:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3138:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3158:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3131:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3131:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3229:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3202:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3247:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3259:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3270:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3255:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3247:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3029:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3043:4:6",
														"type": ""
													}
												],
												"src": "2878:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:239:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3510:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3521:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3506:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3526:2:6",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3499:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3565:34:6",
																		"type": "",
																		"value": "TransferHelper::transferFrom: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3538:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3620:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3631:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3636:19:6",
																		"type": "",
																		"value": "ansferFrom failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3609:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3665:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3677:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3673:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3665:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3436:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3450:4:6",
														"type": ""
													}
												],
												"src": "3285:413:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3877:160:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3894:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3887:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3887:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3887:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3939:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3944:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3917:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3917:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3967:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3978:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3983:12:6",
																		"type": "",
																		"value": "not staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3956:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3956:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4005:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4017:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4013:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4005:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3854:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3868:4:6",
														"type": ""
													}
												],
												"src": "3703:334:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4216:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4233:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4267:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4278:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4283:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4306:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4317:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4302:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4302:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4322:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4366:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4378:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4389:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4366:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4193:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4207:4:6",
														"type": ""
													}
												],
												"src": "4042:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4577:174:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4594:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4605:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4639:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4624:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4624:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4617:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4617:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4667:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4678:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4683:26:6",
																		"type": "",
																		"value": "not enough reward amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4656:54:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4719:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4719:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b67daa85c7b3b58715d6b30e7b18323ccc16fb1f49726e7a66123f1c0d63b6a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4554:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4568:4:6",
														"type": ""
													}
												],
												"src": "4403:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4930:235:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4947:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4940:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4981:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4977:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:2:6",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4970:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5031:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5036:34:6",
																		"type": "",
																		"value": "TransferHelper::safeTransfer: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5009:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5091:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5102:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5087:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5087:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5107:15:6",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5080:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5132:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5132:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4907:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4921:4:6",
														"type": ""
													}
												],
												"src": "4756:409:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5344:162:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5361:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5354:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5406:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5391:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5411:2:6",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5384:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5434:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5445:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5430:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5430:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5450:14:6",
																		"type": "",
																		"value": "invalid user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5423:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5423:42:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5474:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5486:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5497:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5474:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5321:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5335:4:6",
														"type": ""
													}
												],
												"src": "5170:336:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5685:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5702:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5695:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5736:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5747:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5732:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5732:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5752:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5725:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5725:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5775:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5786:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5771:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5771:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5791:24:6",
																		"type": "",
																		"value": "you are in lockedTime."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5764:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5764:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5764:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5825:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5837:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5848:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5833:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5825:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3d2557949e59bddd494ce8c82f9c2b2f252809dcf39c2170df8a6486e0b467b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5662:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5676:4:6",
														"type": ""
													}
												],
												"src": "5511:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5963:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5973:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5973:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6015:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6026:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6008:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5932:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5954:4:6",
														"type": ""
													}
												],
												"src": "5862:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:250:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6267:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6279:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6290:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6275:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6267:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6310:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6321:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6303:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6348:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6359:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6364:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6337:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6337:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6337:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6402:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6387:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6380:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6380:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6434:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6445:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6430:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6450:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6423:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6488:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6473:19:6"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6494:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6466:35:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6194:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6205:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6213:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6221:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6229:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6237:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6248:4:6",
														"type": ""
													}
												],
												"src": "6044:463:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6587:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6589:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6589:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6589:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6583:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6579:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6573:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:13:6"
															},
															"nodeType": "YulIf",
															"src": "6570:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6618:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6629:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6632:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6618:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6543:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6546:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6552:3:6",
														"type": ""
													}
												],
												"src": "6512:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6691:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6722:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "6743:1:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6750:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6755:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6746:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6746:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6736:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6736:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6787:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6790:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6780:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6780:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6780:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "6815:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6818:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6808:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6808:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6808:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6711:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6704:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6704:9:6"
															},
															"nodeType": "YulIf",
															"src": "6701:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6842:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6851:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6842:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6676:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6679:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6685:1:6",
														"type": ""
													}
												],
												"src": "6645:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6919:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6978:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6980:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6980:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6980:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6950:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6943:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6943:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6936:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6958:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6969:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6965:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6965:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6973:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6961:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6961:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6955:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6955:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:45:6"
															},
															"nodeType": "YulIf",
															"src": "6929:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7009:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7024:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7009:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6898:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6901:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6907:7:6",
														"type": ""
													}
												],
												"src": "6867:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7089:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7111:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7113:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7113:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7113:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7105:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7108:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7102:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:8:6"
															},
															"nodeType": "YulIf",
															"src": "7099:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7142:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7154:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7157:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7150:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7142:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7071:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7074:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7080:4:6",
														"type": ""
													}
												],
												"src": "7040:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7217:88:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7248:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7250:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7250:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7250:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7233:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7244:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7240:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7230:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:17:6"
															},
															"nodeType": "YulIf",
															"src": "7227:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7279:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7290:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7297:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7199:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7209:3:6",
														"type": ""
													}
												],
												"src": "7170:135:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7342:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7359:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7366:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7371:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7362:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7362:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7352:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7399:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7402:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7392:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7392:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7392:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7423:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7426:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7416:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7416:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7310:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_117e28c1605b64da1169008bcd4bb6303a577bc5202f105735275c9b0f921425__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"invaild amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"TransferHelper::transferFrom: tr\")\n        mstore(add(headStart, 96), \"ansferFrom failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not staked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b67daa85c7b3b58715d6b30e7b18323ccc16fb1f49726e7a66123f1c0d63b6a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"not enough reward amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransfer: tr\")\n        mstore(add(headStart, 96), \"ansfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"invalid user\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3d2557949e59bddd494ce8c82f9c2b2f252809dcf39c2170df8a6486e0b467b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"you are in lockedTime.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9674A0AC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF0C37A59 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xFD1A2397 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9674A0AC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9F4216E8 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xA8B38205 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xBCE4F054 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5FCBD285 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5FD595C0 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x6A9DB411 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6E26A967 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x356C7284 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x34B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081CDD185AD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST LT PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x3CB7BA9030B9329034B7103637B1B5B2B22A34B6B297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST PUSH2 0x401 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 SLOAD PUSH2 0x41B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH2 0xB39 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x435 PUSH2 0xC63 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x486 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP1 PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682072657761726420616D6F756E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x5 SLOAD PUSH2 0x50B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD TIMESTAMP SWAP1 DUP4 SWAP1 DUP2 SWAP1 PUSH3 0x15180 SWAP1 PUSH2 0x616 SWAP1 DUP6 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD DUP6 PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0x68A PUSH1 0x0 PUSH2 0xDC1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985A5B1908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x74D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0xE11 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x7C8 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x796 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST DUP1 PUSH2 0x7C0 DUP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x761 JUMP JUMPDEST POP PUSH2 0x7D1 PUSH2 0xA3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP5 DUP5 SSTORE DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x857 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x847 SWAP1 DUP5 SWAP1 PUSH2 0x1079 JUMP JUMPDEST DUP3 SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST DUP3 PUSH1 0x2 SLOAD PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35C JUMP JUMPDEST PUSH2 0x93A DUP2 PUSH2 0xDC1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 POP TIMESTAMP SWAP2 SWAP1 PUSH3 0x15180 SWAP1 PUSH2 0xAB1 SWAP1 DUP5 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP5 SLOAD PUSH1 0x4 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0xAD3 SWAP1 DUP6 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xAF9 SWAP1 DUP3 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0xB0B DUP3 PUSH3 0x15180 PUSH2 0x10B1 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0xB31 SWAP1 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC01 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xC01 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35C JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xC76 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xD7C JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCCC JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xD6A JUMP JUMPDEST DUP2 PUSH2 0xCD6 JUMPI PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x8 PUSH2 0xCE3 DUP3 PUSH1 0x1 PUSH2 0x1079 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD01 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH2 0xD74 DUP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC67 JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0xD9C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xEE1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xEE1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x185B9CD9995C919C9BDB4819985A5B1959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP3 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xF5B DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFAC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xFB5 DUP5 PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP PUSH2 0xFC3 PUSH1 0x20 DUP6 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF5B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1004 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x102B JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1011 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1039 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x108C JUMPI PUSH2 0x108C PUSH2 0x1102 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x1102 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E2 JUMPI PUSH2 0x10E2 PUSH2 0x1102 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x1102 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP2 PUSH9 0x315EC279809740BD25 SWAP14 0x5F ADDRESS CODECOPY SWAP4 SWAP6 0xBD MSTORE BALANCE 0x49 KECCAK256 SWAP1 0xE6 0x24 DUP8 0xC9 MULMOD 0xE3 DUP9 0xDF PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "169:5626:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;804:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6303:25:6;;;6359:2;6344:18;;6337:34;;;;6387:18;;;6380:34;;;;6445:2;6430:18;;6423:34;6488:3;6473:19;;6466:35;6290:3;6275:19;804:45:5;;;;;;;;482:26;;;;;;;;;6008:25:6;;;5996:2;5981:18;482:26:5;5963:76:6;515:34:5;;;;;;4655:524;;;:::i;:::-;;5187:400;;;:::i;453:22::-;;;;;-1:-1:-1;;;;;453:22:5;;;;;;-1:-1:-1;;;;;1832:32:6;;;1814:51;;1802:2;1787:18;453:22:5;1769:102:6;1548::5;;;;;;:::i;:::-;;:::i;1879:174::-;;;;;;:::i;:::-;;:::i;2061:464::-;;;;;;:::i;:::-;;:::i;1714:103:2:-;;;:::i;1063:87::-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:2;1063:87;;1760:111:5;;;;;;:::i;:::-;;:::i;856:25::-;;;;;;:::i;:::-;;:::i;3203:1029::-;;;;;;:::i;:::-;;:::i;888:42::-;;;;;;2533:97;2611:11;;2533:97;;1658:94;1729:8;:15;1658:94;;1972:201:2;;;;;;:::i;:::-;;:::i;5595:197:5:-;;;;;;:::i;:::-;;:::i;643:26::-;;;;;-1:-1:-1;;;;;643:26:5;;;676:27;;;;;-1:-1:-1;;;;;676:27:5;;;1426:110;;;;;;:::i;:::-;;:::i;4655:524::-;4726:10;4693:21;4717:20;;;:8;:20;;;;;4756:25;;;;4748:54;;;;-1:-1:-1;;;4748:54:5;;5372:2:6;4748:54:5;;;5354:21:6;5411:2;5391:18;;;5384:30;-1:-1:-1;;;5430:18:6;;;5423:42;5482:18;;4748:54:5;;;;;;;;;4821:11;;4813:38;;;;-1:-1:-1;;;4813:38:5;;3905:2:6;4813:38:5;;;3887:21:6;3944:2;3924:18;;;3917:30;-1:-1:-1;;;3963:18:6;;;3956:40;4013:18;;4813:38:5;3877:160:6;4813:38:5;4911:15;4898:10;;4870:4;:25;;;:38;;;;:::i;:::-;:56;4862:91;;;;-1:-1:-1;;;4862:91:5;;5713:2:6;4862:91:5;;;5695:21:6;5752:2;5732:18;;;5725:30;-1:-1:-1;;;5771:18:6;;;5764:52;5833:18;;4862:91:5;5685:172:6;4862:91:5;4964:12;:10;:12::i;:::-;5015:7;;5036:11;;4987:61;;-1:-1:-1;;;;;5015:7:5;;5024:10;;4987:27;:61::i;:::-;5087:11;;5073;;:25;;5087:11;5073:25;:::i;:::-;5059:11;:39;5109:13;:11;:13::i;:::-;5159:11;;5138:33;;6008:25:6;;;5147:10:5;;5138:33;;5996:2:6;5981:18;5138:33:5;;;;;;;4655:524;:::o;5187:400::-;5255:10;5222:21;5246:20;;;:8;:20;;;;;5277:12;:10;:12::i;:::-;5314:15;;;;5348:10;5340:47;;;;-1:-1:-1;;;5340:47:5;;4605:2:6;5340:47:5;;;4587:21:6;4644:2;4624:18;;;4617:30;4683:26;4663:18;;;4656:54;4727:18;;5340:47:5;4577:174:6;5340:47:5;5430:6;5414:4;:13;;;:22;;;;:::i;:::-;5398:13;;;:38;5465:1;5447:15;;;:19;5505:11;;5477:60;;-1:-1:-1;;;;;5505:11:5;5518:10;5530:6;5477:27;:60::i;:::-;5553:26;;6008:25:6;;;5560:10:5;;5553:26;;5996:2:6;5981:18;5553:26:5;;;;;;;5187:400;;:::o;1548:102::-;1109:7:2;1136:6;-1:-1:-1;;;;;1136:6:2;736:10:0;1283:23:2;1275:68;;;;-1:-1:-1;;;1275:68:2;;;;;;;:::i;:::-;1624:7:5::1;:18:::0;;-1:-1:-1;;;;;;1624:18:5::1;-1:-1:-1::0;;;;;1624:18:5;;;::::1;::::0;;;::::1;::::0;;1548:102::o;1879:174::-;1945:7;1965:21;1989:8;:27;1998:8;2007:7;1998:17;;;;;;-1:-1:-1;;;1998:17:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1998:17:5;1989:27;;;;;;;;;;;;2034:11;;1879:174;-1:-1:-1;;;1879:174:5:o;2061:464::-;-1:-1:-1;;;;;2175:22:5;;2131:7;2175:22;;;:8;:22;;;;;2344:28;;;;2232:15;;2131:7;;;;2377:6;;2328:44;;2232:15;2328:44;:::i;:::-;2327:57;;;;:::i;:::-;2300:84;;2469:11;;2451:14;;2437:4;:11;;;2418:16;:30;;;;:::i;:::-;:47;;;;:::i;:::-;2417:63;;;;:::i;:::-;2395:85;2061:464;-1:-1:-1;;;;;;2061:464:5:o;1714:103:2:-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:2;736:10:0;1283:23:2;1275:68;;;;-1:-1:-1;;;1275:68:2;;;;;;;:::i;:::-;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;1760:111:5:-;1819:7;1846:8;1855:7;1846:17;;;;;;-1:-1:-1;;;1846:17:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1846:17:5;;1760:111;-1:-1:-1;;1760:111:5:o;856:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;856:25:5;;-1:-1:-1;856:25:5;:::o;3203:1029::-;3269:1;3260:6;:10;3252:37;;;;-1:-1:-1;;;3252:37:5;;2737:2:6;3252:37:5;;;2719:21:6;2776:2;2756:18;;;2749:30;-1:-1:-1;;;2795:18:6;;;2788:44;2849:18;;3252:37:5;2709:164:6;3252:37:5;3332:7;;3300:75;;-1:-1:-1;;;;;3332:7:5;3341:10;3361:4;3368:6;3300:31;:75::i;:::-;3419:10;3386:21;3410:20;;;:8;:20;;;;;;3456:4;;3471:150;3492:8;:15;3488:19;;3471:150;;;3548:10;-1:-1:-1;;;;;3533:25:5;:8;3542:1;3533:11;;;;;;-1:-1:-1;;;3533:11:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3533:11:5;:25;3529:81;;;3589:5;3579:15;;3529:81;3509:3;;;;:::i;:::-;;;;3471:150;;;;3631:12;:10;:12::i;:::-;3658:7;3654:483;;;3682:8;:25;;;;;;;;-1:-1:-1;3682:25:5;;;;;;;;;-1:-1:-1;;;;;;3682:25:5;3696:10;3682:25;;;3722:20;;;3757:13;;:17;;;3789:15;;;:19;3851:15;3823:25;;;:43;;;3881:28;;;:46;3654:483;;;3986:11;;:20;;4000:6;;3986:20;:::i;:::-;3972:34;;4049:15;4021:25;;;:43;;;4079:28;;;:46;3654:483;4175:6;4161:11;;:20;;;;:::i;:::-;4147:11;:34;4197:27;;6008:25:6;;;4205:10:5;;4197:27;;5996:2:6;5981:18;4197:27:5;;;;;;;3203:1029;;;:::o;1972:201:2:-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:2;736:10:0;1283:23:2;1275:68;;;;-1:-1:-1;;;1275:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2061:22:2;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:2;;3080:2:6;2053:73:2::1;::::0;::::1;3062:21:6::0;3119:2;3099:18;;;3092:30;3158:34;3138:18;;;3131:62;-1:-1:-1;;;3209:18:6;;;3202:36;3255:19;;2053:73:2::1;3052:228:6::0;2053:73:2::1;2137:28;2156:8;2137:18;:28::i;:::-;1972:201:::0;:::o;5595:197:5:-;1109:7:2;1136:6;-1:-1:-1;;;;;1136:6:2;736:10:0;1283:23:2;1275:68;;;;-1:-1:-1;;;1275:68:2;;;;;;;:::i;:::-;5755:29:5::1;::::0;-1:-1:-1;;;5755:29:5;;-1:-1:-1;;;;;2448:32:6;;;5755:29:5::1;::::0;::::1;2430:51:6::0;2497:18;;;2490:34;;;5727:16:5;;5755:15;;::::1;::::0;::::1;::::0;2403:18:6;;5755:29:5::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1354:1:2;5595:197:5::0;;;:::o;1426:110::-;1109:7:2;1136:6;-1:-1:-1;;;;;1136:6:2;736:10:0;1283:23:2;1275:68;;;;-1:-1:-1;;;1275:68:2;;;;;;;:::i;:::-;1506:11:5::1;:22:::0;;-1:-1:-1;;;;;;1506:22:5::1;-1:-1:-1::0;;;;;1506:22:5;;;::::1;::::0;;;::::1;::::0;;1426:110::o;2638:557::-;2685:6;2680:508;2701:8;:15;2697:19;;2680:508;;;2738:21;2762:8;:21;2771:8;2780:1;2771:11;;;;;;-1:-1:-1;;;2771:11:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2771:11:5;2762:21;;;;;;;;;;;;2891:28;;;;2762:21;;-1:-1:-1;2822:15:5;;2771:11;2923:6;;2875:44;;2822:15;2875:44;:::i;:::-;2874:55;;;;:::i;:::-;3007:11;;2993;;2976:14;;2852:77;;-1:-1:-1;2944:15:5;;2962:28;;2852:77;2962:28;:::i;:::-;:42;;;;:::i;:::-;:56;;;;:::i;:::-;3051:15;;;;2944:74;;-1:-1:-1;3051:28:5;;2944:74;3051:19;:28::i;:::-;3033:15;;;:46;3156:20;:11;3170:6;3156:20;:::i;:::-;3125:4;:28;;;:51;;;;:::i;:::-;3094:4;:28;;:82;;;;2680:508;;;;2718:3;;;;;:::i;:::-;;;;2680:508;;671:449:4;903:45;;;-1:-1:-1;;;;;2448:32:6;;;903:45:4;;;2430:51:6;2497:18;;;;2490:34;;;903:45:4;;;;;;;;;;2403:18:6;;;;903:45:4;;;;;;;-1:-1:-1;;;;;903:45:4;-1:-1:-1;;;903:45:4;;;892:57;;-1:-1:-1;;;;892:10:4;;;;:57;;903:45;892:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:93;;;;982:7;:57;;;;-1:-1:-1;994:11:4;;:16;;:44;;;1025:4;1014:24;;;;;;;;;;;;:::i;:::-;960:152;;;;-1:-1:-1;;;960:152:4;;4958:2:6;960:152:4;;;4940:21:6;4997:2;4977:18;;;4970:30;5036:34;5016:18;;;5009:62;-1:-1:-1;;;5087:18:6;;;5080:43;5140:19;;960:152:4;4930:235:6;4240:407:5;4283:11;4317:9;4313:302;4337:8;:15;:19;;4355:1;;4337:19;:::i;:::-;4333:1;:23;4313:302;;;4397:10;-1:-1:-1;;;;;4382:25:5;:8;4391:1;4382:11;;;;;;-1:-1:-1;;;4382:11:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4382:11:5;:25;4379:104;;;4436:4;4427:13;;4459:8;;4379:104;4500:15;4497:63;;4536:8;;4497:63;4588:8;4597:5;:1;4601;4597:5;:::i;:::-;4588:15;;;;;;-1:-1:-1;;;4588:15:5;;;;;;;;;;;;;;;;;;;4574:8;:11;;-1:-1:-1;;;;;4588:15:5;;;;4583:1;;4574:11;;;;-1:-1:-1;;;4574:11:5;;;;;;;;;;;;;;;;;:29;;;;;-1:-1:-1;;;;;4574:29:5;;;;;-1:-1:-1;;;;;4574:29:5;;;;;;4313:302;4359:4;;;;:::i;:::-;;;;4313:302;;;;4625:8;:14;;;;;-1:-1:-1;;;4625:14:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;4625:14:5;;;;;-1:-1:-1;;;;;;4625:14:5;;;;;;-1:-1:-1;4240:407:5:o;2333:191:2:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:2;;;-1:-1:-1;;;;;;2443:17:2;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;1128:498:4:-;1399:51;;;-1:-1:-1;;;;;2134:15:6;;;1399:51:4;;;2116:34:6;2186:15;;;2166:18;;;2159:43;2218:18;;;;2211:34;;;1399:51:4;;;;;;;;;;2051:18:6;;;;1399:51:4;;;;;;;-1:-1:-1;;;;;1399:51:4;-1:-1:-1;;;1399:51:4;;;1388:63;;-1:-1:-1;;;;1388:10:4;;;;:63;;1399:51;1388:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:99;;;;1484:7;:57;;;;-1:-1:-1;1496:11:4;;:16;;:44;;;1527:4;1516:24;;;;;;;;;;;;:::i;:::-;1462:156;;;;-1:-1:-1;;;1462:156:4;;3487:2:6;1462:156:4;;;3469:21:6;3526:2;3506:18;;;3499:30;3565:34;3545:18;;;3538:62;-1:-1:-1;;;3616:18:6;;;3609:47;3673:19;;1462:156:4;3459:239:6;1462:156:4;1128:498;;;;;;:::o;2847:98:3:-;2905:7;2932:5;2936:1;2932;:5;:::i;:::-;2925:12;2847:98;-1:-1:-1;;;2847:98:3:o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:338::-;470:6;478;486;539:2;527:9;518:7;514:23;510:32;507:2;;;560:6;552;545:22;507:2;588:29;607:9;588:29;:::i;:::-;578:39;;636:38;670:2;659:9;655:18;636:38;:::i;:::-;626:48;;721:2;710:9;706:18;693:32;683:42;;497:234;;;;;:::o;736:297::-;803:6;856:2;844:9;835:7;831:23;827:32;824:2;;;877:6;869;862:22;824:2;914:9;908:16;967:5;960:13;953:21;946:5;943:32;933:2;;994:6;986;979:22;1038:190;1097:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:2;;;1171:6;1163;1156:22;1118:2;-1:-1:-1;1199:23:6;;1108:120;-1:-1:-1;1108:120:6:o;1233:430::-;1362:3;1400:6;1394:13;1425:3;1437:129;1451:6;1448:1;1445:13;1437:129;;;1549:4;1533:14;;;1529:25;;1523:32;1510:11;;;1503:53;1466:12;1437:129;;;1584:6;1581:1;1578:13;1575:2;;;1619:3;1610:6;1605:3;1601:16;1594:29;1575:2;-1:-1:-1;1641:16:6;;;;;1370:293;-1:-1:-1;;1370:293:6:o;4042:356::-;4244:2;4226:21;;;4263:18;;;4256:30;4322:34;4317:2;4302:18;;4295:62;4389:2;4374:18;;4216:182::o;6512:128::-;6552:3;6583:1;6579:6;6576:1;6573:13;6570:2;;;6589:18;;:::i;:::-;-1:-1:-1;6625:9:6;;6560:80::o;6645:217::-;6685:1;6711;6701:2;;-1:-1:-1;;;6736:31:6;;6790:4;6787:1;6780:15;6818:4;6743:1;6808:15;6701:2;-1:-1:-1;6847:9:6;;6691:171::o;6867:168::-;6907:7;6973:1;6969;6965:6;6961:14;6958:1;6955:21;6950:1;6943:9;6936:17;6932:45;6929:2;;;6980:18;;:::i;:::-;-1:-1:-1;7020:9:6;;6919:116::o;7040:125::-;7080:4;7108:1;7105;7102:8;7099:2;;;7113:18;;:::i;:::-;-1:-1:-1;7150:9:6;;7089:76::o;7170:135::-;7209:3;-1:-1:-1;;7230:17:6;;7227:2;;;7250:18;;:::i;:::-;-1:-1:-1;7297:1:6;7286:13;;7217:88::o;7310:127::-;7371:10;7366:3;7362:20;7359:1;7352:31;7402:4;7399:1;7392:15;7426:4;7423:1;7416:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "886000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"adminAddress()": "1147",
								"claim()": "infinite",
								"ecioClaimPossible(address)": "infinite",
								"lastRewardTimeStamp()": "1063",
								"lockedTime()": "1084",
								"lpToken()": "1060",
								"owner()": "1164",
								"renounceOwnership()": "23525",
								"rewardToken()": "1125",
								"stake(uint256)": "infinite",
								"totalAmount()": "1041",
								"totalLpTokenAmount()": "1103",
								"transferOwnership(address)": "23653",
								"transferToken(address,address,uint256)": "infinite",
								"updateLpTokenAddress(address)": "22056",
								"updateRewardTokenAddress(address)": "22143",
								"userAddress(uint256)": "2042",
								"userCounter()": "1014",
								"userInfo(address)": "4576",
								"userList(uint256)": "2059",
								"userStakedLpAmount(uint256)": "2957",
								"withdraw()": "infinite"
							},
							"internal": {
								"deleteBlock()": "infinite",
								"updatePool()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 591,
									"end": 605,
									"name": "PUSH",
									"source": 5,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 558,
									"end": 605,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 558,
									"end": 605,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 916,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "4F1A00"
								},
								{
									"begin": 888,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 888,
									"end": 930,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 971,
									"end": 972,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 947,
									"end": 972,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 947,
									"end": 972,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1264,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1277,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1317,
									"end": 1343,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1365,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1354,
									"end": 1369,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1380,
									"end": 1410,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1380,
									"end": 1410,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1380,
									"end": 1410,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1380,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1418,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 499,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 306,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 304,
									"end": 306,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 357,
									"end": 363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 349,
									"end": 355,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 342,
									"end": 364,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 306,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 304,
									"end": 306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 385,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 415,
									"end": 424,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 385,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 385,
									"end": 425,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 385,
									"end": 425,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 385,
									"end": 425,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 425,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 375,
									"end": 425,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 444,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 489,
									"end": 491,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 478,
									"end": 487,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 474,
									"end": 492,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 444,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 444,
									"end": 493,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 444,
									"end": 493,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 444,
									"end": 493,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 434,
									"end": 493,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 434,
									"end": 493,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 294,
									"end": 499,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 294,
									"end": 499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 5795,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220318168315ec279809740bd259d5f30399395bd5231492090e62487c909e388df64736f6c63430008040033",
									".code": [
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "9674A0AC"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "F0C37A59"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "F0C37A59"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "F5537EDE"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "FC6F9468"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "FD1A2397"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "9674A0AC"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "9F4216E8"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "A8B38205"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "BCE4F054"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "5FCBD285"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "5FCBD285"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "5FD595C0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "6A9DB411"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "6E26A967"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "1959A002"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "1A39D8EF"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "356C7284"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "3CCFD60B"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "4E71D92D"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 5795,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6303,
											"end": 6328,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6328,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6371,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6371,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6414,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6414,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6491,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6473,
											"end": 6492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6466,
											"end": 6501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 482,
											"end": 508,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 482,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 482,
											"end": 508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 508,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 508,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 482,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 482,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5963,
											"end": 6039,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 515,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 515,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 475,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 453,
											"end": 475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 453,
											"end": 475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 453,
											"end": 475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 453,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 453,
											"end": 475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 453,
											"end": 475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 453,
											"end": 475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 453,
											"end": 475,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 453,
											"end": 475,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 453,
											"end": 475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 453,
											"end": 475,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 475,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 453,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1769,
											"end": 1871,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 888,
											"end": 930,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 888,
											"end": 930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 888,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 888,
											"end": 930,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 888,
											"end": 930,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 888,
											"end": 930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 888,
											"end": 930,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2630,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2533,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 2622,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2533,
											"end": 2630,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1752,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1658,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1658,
											"end": 1752,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 669,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 669,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 669,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 643,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 643,
											"end": 669,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 643,
											"end": 669,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 643,
											"end": 669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 669,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 703,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 676,
											"end": 703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 676,
											"end": 703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 676,
											"end": 703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 703,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4736,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4756,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4756,
											"end": 4781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4756,
											"end": 4781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4756,
											"end": 4781,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5411,
											"end": 5413,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B73B30B634B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4748,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4832,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3944,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3981,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3963,
											"end": 3981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3996,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3877,
											"end": 4037,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4813,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4908,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4898,
											"end": 4908,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4895,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4870,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4926,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5716,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3CB7BA9030B9329034B7103637B1B5B2B22A34B6B297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5685,
											"end": 5857,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4862,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4964,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5047,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4987,
											"end": 5048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4987,
											"end": 5048,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4987,
											"end": 5048,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4987,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5098,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5073,
											"end": 5084,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5073,
											"end": 5098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5073,
											"end": 5098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5098,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5073,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5070,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5059,
											"end": 5098,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5109,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5170,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5157,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 5179,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5265,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5266,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5277,
											"end": 5289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5289,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5277,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5348,
											"end": 5358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4617,
											"end": 4647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4683,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "6E6F7420656E6F7567682072657761726420616D6F756E740000000000000000"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4745,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4727,
											"end": 4745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4577,
											"end": 4751,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5427,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5414,
											"end": 5427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5427,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5414,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5436,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5447,
											"end": 5462,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5466,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5477,
											"end": 5537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5528,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5477,
											"end": 5537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5477,
											"end": 5537,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5477,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"source": 5,
											"value": "619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5587,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1650,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2007,
											"end": 2014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2045,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2045,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 2053,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2372,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2344,
											"end": 2372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2372,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2247,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "15180"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2247,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2418,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2417,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2480,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2525,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 856,
											"end": 881,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985A5B1908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2795,
											"end": 2813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2867,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2849,
											"end": 2867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2709,
											"end": 2873,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3252,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3300,
											"end": 3375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3351,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3365,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3300,
											"end": 3375,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3375,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3300,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3429,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3507,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3558,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3541,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3544,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3558,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3610,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3529,
											"end": 3610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3610,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3529,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3706,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3774,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3804,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3789,
											"end": 3804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3848,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3823,
											"end": 3848,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3866,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3909,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3881,
											"end": 3909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3927,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 3997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 3997,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4006,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4064,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4046,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4021,
											"end": 4046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4064,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4107,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4079,
											"end": 4107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4125,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3654,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4147,
											"end": 4181,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "PUSH",
											"source": 5,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4224,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 4232,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3121,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3192,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3255,
											"end": 3274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3052,
											"end": 3280,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5792,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1517,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1536,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2638,
											"end": 3195,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2638,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2701,
											"end": 2716,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2770,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "PUSH",
											"source": 5,
											"value": "15180"
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2875,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2875,
											"end": 2919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2875,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3007,
											"end": 3018,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3004,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3004,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2929,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2929,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2929,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2962,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2962,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 3018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 3018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3051,
											"end": 3079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 3018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3051,
											"end": 3079,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3079,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3051,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3079,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3156,
											"end": 3167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "PUSH",
											"source": 5,
											"value": "15180"
										},
										{
											"begin": 3156,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3156,
											"end": 3176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3176,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3156,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3153,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3125,
											"end": 3153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3153,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3125,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3098,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3122,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3094,
											"end": 3122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3176,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3176,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2680,
											"end": 3188,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 671,
											"end": 1120,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 671,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 903,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 903,
											"end": 948,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 903,
											"end": 948,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 892,
											"end": 902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 892,
											"end": 902,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 892,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 892,
											"end": 902,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 892,
											"end": 949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 892,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 856,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 856,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 856,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 856,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 982,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1039,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 982,
											"end": 1039,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 994,
											"end": 1005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1005,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 994,
											"end": 1038,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 5000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665723A207472"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5009,
											"end": 5071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5123,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5159,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5140,
											"end": 5159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 960,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4930,
											"end": 5165,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4647,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4240,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4337,
											"end": 4352,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4356,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4407,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4390,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4483,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4379,
											"end": 4483,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4427,
											"end": 4440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4459,
											"end": 4467,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4483,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4379,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4497,
											"end": 4560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4536,
											"end": 4544,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4560,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4497,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4596,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4597,
											"end": 4598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4601,
											"end": 4602,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4582,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4633,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4639,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4647,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2245,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1484,
											"end": 1541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1496,
											"end": 1540,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3489,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472"
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C919C9BDB4819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3692,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3673,
											"end": 3692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3459,
											"end": 3698,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 1462,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2847,
											"end": 2945,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2847,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2933,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2937,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2945,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2847,
											"end": 2945,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 731,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 393,
											"end": 731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 541,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 527,
											"end": 536,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 518,
											"end": 525,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 514,
											"end": 537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 509,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 507,
											"end": 509,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 567,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 509,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 507,
											"end": 509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 607,
											"end": 616,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 588,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 578,
											"end": 617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 636,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 655,
											"end": 673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 636,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 626,
											"end": 674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 719,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 693,
											"end": 725,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 683,
											"end": 725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 683,
											"end": 725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 497,
											"end": 731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 497,
											"end": 731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 497,
											"end": 731,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 1033,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 736,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 803,
											"end": 809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 831,
											"end": 854,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 827,
											"end": 859,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 824,
											"end": 826,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 877,
											"end": 883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 862,
											"end": 884,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 824,
											"end": 826,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 908,
											"end": 924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 967,
											"end": 972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 960,
											"end": 973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 953,
											"end": 974,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 943,
											"end": 975,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 933,
											"end": 935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1228,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1038,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1228,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1233,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1233,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1547,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 1437,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1616,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1663,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4042,
											"end": 4398,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4042,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4356,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4398,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6512,
											"end": 6640,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6512,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6576,
											"end": 6577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6586,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6640,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6645,
											"end": 6862,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6645,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6736,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6787,
											"end": 6788,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6780,
											"end": 6795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6743,
											"end": 6744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6823,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6862,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6867,
											"end": 7035,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6867,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6965,
											"end": 6971,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 6977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6980,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6980,
											"end": 6998,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6980,
											"end": 6998,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6980,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 7035,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7040,
											"end": 7165,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 7040,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7110,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7113,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7159,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7165,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7305,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7170,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7230,
											"end": 7247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7247,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7229,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7227,
											"end": 7229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7305,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7310,
											"end": 7437,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7310,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7381,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 7366,
											"end": 7369,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7406,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7399,
											"end": 7400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7392,
											"end": 7407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7426,
											"end": 7430,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7423,
											"end": 7424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7431,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"adminAddress()": "fc6f9468",
							"claim()": "4e71d92d",
							"ecioClaimPossible(address)": "6e26a967",
							"lastRewardTimeStamp()": "356c7284",
							"lockedTime()": "a8b38205",
							"lpToken()": "5fcbd285",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"stake(uint256)": "a694fc3a",
							"totalAmount()": "1a39d8ef",
							"totalLpTokenAmount()": "bce4f054",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,address,uint256)": "f5537ede",
							"updateLpTokenAddress(address)": "5fd595c0",
							"updateRewardTokenAddress(address)": "fd1a2397",
							"userAddress(uint256)": "9674a0ac",
							"userCounter()": "f0c37a59",
							"userInfo(address)": "1959a002",
							"userList(uint256)": "9f4216e8",
							"userStakedLpAmount(uint256)": "6a9db411",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_useraddress\",\"type\":\"address\"}],\"name\":\"ecioClaimPossible\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLpTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateLpTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateRewardTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userNum\",\"type\":\"uint256\"}],\"name\":\"userAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewarded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCalculatedTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositTimeStamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userNum\",\"type\":\"uint256\"}],\"name\":\"userStakedLpAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"EcioStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Ownable.sol\":{\"keccak256\":\"0x1ff0e24b46e1ffd5492d354b917f039cb789e4c24bf8fe57aa62c3805c901ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55ea5b40556884d06b3e0eb477c269de45faa81aacca7f5536a543e3f1fe244\",\"dweb:/ipfs/QmfE47Ftm6yRJzHAYtdj9K7HLV7boqjFuZ5er32836hvTB\"]},\"SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]},\"TransferHelper.sol\":{\"keccak256\":\"0x02303105b4552c8801a5dfd82c3cc4584b7be8b60bdbad255fc90057150c7b91\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4286026677d8c5848999027707de5897aaecd4956624be5f2857c61ed1cd09f8\",\"dweb:/ipfs/QmXrEqLmmLF5WMsxvLdBQqPMBuWHXSA3rLjekaPgDKZx7t\"]},\"staking.sol\":{\"keccak256\":\"0xef10765af2a04e97d3570867cef0bf1724ca625f4978f822dbb620212b59c955\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ee724d0211d74f33a317d36d846544425aa561a43a0190bbc3d224c14079a7c\",\"dweb:/ipfs/QmV6RrAuiQBgbJW4FZnqp4W5X8t3YnAG96YiQSdDJM2Tpn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 107,
								"contract": "staking.sol:EcioStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 700,
								"contract": "staking.sol:EcioStaking",
								"label": "lpToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 702,
								"contract": "staking.sol:EcioStaking",
								"label": "totalAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 704,
								"contract": "staking.sol:EcioStaking",
								"label": "lastRewardTimeStamp",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 711,
								"contract": "staking.sol:EcioStaking",
								"label": "REWARD_PER_DAY",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 713,
								"contract": "staking.sol:EcioStaking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 715,
								"contract": "staking.sol:EcioStaking",
								"label": "adminAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 720,
								"contract": "staking.sol:EcioStaking",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(UserInfo)698_storage)"
							},
							{
								"astId": 723,
								"contract": "staking.sol:EcioStaking",
								"label": "userList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 730,
								"contract": "staking.sol:EcioStaking",
								"label": "lockedTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 733,
								"contract": "staking.sol:EcioStaking",
								"label": "unlocked",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(UserInfo)698_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EcioStaking.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)698_storage"
							},
							"t_struct(UserInfo)698_storage": {
								"encoding": "inplace",
								"label": "struct EcioStaking.UserInfo",
								"members": [
									{
										"astId": 689,
										"contract": "staking.sol:EcioStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 691,
										"contract": "staking.sol:EcioStaking",
										"label": "rewarded",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 693,
										"contract": "staking.sol:EcioStaking",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 695,
										"contract": "staking.sol:EcioStaking",
										"label": "lastCalculatedTimeStamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 697,
										"contract": "staking.sol:EcioStaking",
										"label": "lastDepositTimeStamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> staking.sol:42:5:\n   |\n42 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1418,
					"file": "staking.sol",
					"start": 1157
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "641:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "729:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 21,
									"src": "656:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "829:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "840:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "813:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:0"
									},
									"scope": 21,
									"src": "762:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "623:243:0",
							"usedErrors": []
						}
					],
					"src": "89:779:0"
				},
				"id": 0
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 33,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 42,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 99,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 99,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 99,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 99,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 99,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 99,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 100,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:2"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 22,
							"src": "117:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 104,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "680:7:2"
									},
									"id": 105,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 103,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204,
								21
							],
							"name": "Ownable",
							"nameLocation": "669:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 204,
									"src": "695:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 106,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 113,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "753:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "784:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:2"
									},
									"src": "726:84:2"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "931:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 118,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "961:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "942:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "942:32:2"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:2"
									},
									"scope": 204,
									"src": "917:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1118:32:2",
										"statements": [
											{
												"expression": {
													"id": 129,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "1136:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "1129:13:2"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:2"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1109:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:2"
									},
									"scope": 204,
									"src": "1063:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1264:99:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 136,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "1283:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 138,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1294:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:2"
											},
											{
												"id": 144,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 146,
									"name": "onlyOwner",
									"nameLocation": "1252:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:2"
									},
									"src": "1243:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1768:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1779:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:2"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1758:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1723:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:2"
									},
									"scope": 204,
									"src": "1714:103:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2042:131:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 169,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "2061:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 170,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2156:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 178,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2137:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:2"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 165,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "2032:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1981:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2007:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1999:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:2"
									},
									"scope": 204,
									"src": "1972:201:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2396:128:2",
										"statements": [
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2415:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "2407:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"id": 191,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "2426:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:2"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2443:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 194,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2452:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 198,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2497:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2507:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2476:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2471:45:2"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2342:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2369:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2361:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:2"
									},
									"scope": 204,
									"src": "2333:191:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 205,
							"src": "651:1876:2",
							"usedErrors": []
						}
					],
					"src": "90:2439:2"
				},
				"id": 2
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							516
						]
					},
					"id": 517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "294:201:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 516,
							"linearizedBaseContracts": [
								516
							],
							"name": "SafeMath",
							"nameLocation": "505:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "738:146:3",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "749:128:3",
												"statements": [
													{
														"assignments": [
															220
														],
														"declarations": [
															{
																"constant": false,
																"id": 220,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "782:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "774:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 219,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "774:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 224,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "774:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 225,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 226,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "814:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "806:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "825:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "832:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "824:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 218,
															"id": 231,
															"nodeType": "Return",
															"src": "817:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "857:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "863:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "856:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 218,
														"id": 236,
														"nodeType": "Return",
														"src": "849:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "521:135:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "671:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "686:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "678:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "697:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "689:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:22:3"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "723:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "729:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:3"
									},
									"scope": 516,
									"src": "662:222:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1112:118:3",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "1123:100:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "1152:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 252,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "1156:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1152:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "1148:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1167:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1174:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1166:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "1159:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "1205:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "1209:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1205:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1198:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "1191:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "892:138:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1045:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1060:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1052:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1071:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:22:3"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1097:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1103:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:15:3"
									},
									"scope": 516,
									"src": "1036:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "1461:427:3",
										"statements": [
											{
												"id": 307,
												"nodeType": "UncheckedBlock",
												"src": "1472:409:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "1734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1734:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "1730:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1756:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "1742:16:3"
														}
													},
													{
														"assignments": [
															288
														],
														"declarations": [
															{
																"constant": false,
																"id": 288,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1781:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 307,
																"src": "1773:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 287,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1773:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 292,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "1785:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 290,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "1789:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1785:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1773:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 293,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1809:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 294,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1809:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 296,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "1818:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1809:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 302,
														"nodeType": "IfStatement",
														"src": "1805:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1829:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1828:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 301,
															"nodeType": "Return",
															"src": "1821:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1861:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 304,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1867:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 305,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1860:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 306,
														"nodeType": "Return",
														"src": "1853:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1238:141:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1394:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1409:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1401:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:22:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1446:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1452:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:15:3"
									},
									"scope": 516,
									"src": "1385:503:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2120:119:3",
										"statements": [
											{
												"id": 335,
												"nodeType": "UncheckedBlock",
												"src": "2131:101:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "2160:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2160:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 328,
														"nodeType": "IfStatement",
														"src": "2156:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2176:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2183:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2175:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 320,
															"id": 327,
															"nodeType": "Return",
															"src": "2168:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2208:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 330,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "2214:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 331,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 314,
																		"src": "2218:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2214:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 333,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2207:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 320,
														"id": 334,
														"nodeType": "Return",
														"src": "2200:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "1896:142:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2053:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2068:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2060:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2079:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2071:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:22:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2105:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2105:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2111:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:15:3"
									},
									"scope": 516,
									"src": "2044:195:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2481:119:3",
										"statements": [
											{
												"id": 363,
												"nodeType": "UncheckedBlock",
												"src": "2492:101:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "2521:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2521:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 356,
														"nodeType": "IfStatement",
														"src": "2517:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2537:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2544:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2536:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 348,
															"id": 355,
															"nodeType": "Return",
															"src": "2529:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 358,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "2575:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 359,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "2579:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2575:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 361,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2568:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 348,
														"id": 362,
														"nodeType": "Return",
														"src": "2561:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2247:152:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2414:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2429:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2421:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2440:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2432:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:22:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2466:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2472:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:15:3"
									},
									"scope": 516,
									"src": "2405:195:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "2914:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 375,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2932:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 376,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2936:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 374,
												"id": 378,
												"nodeType": "Return",
												"src": "2925:12:3"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2608:233:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2856:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2868:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2860:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2879:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2871:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:22:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2905:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:9:3"
									},
									"scope": 516,
									"src": "2847:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3295:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "3313:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 391,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3317:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3313:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 389,
												"id": 393,
												"nodeType": "Return",
												"src": "3306:12:3"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2953:269:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3237:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3249:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3241:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3260:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3252:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:22:3"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3286:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:9:3"
									},
									"scope": 516,
									"src": "3228:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3652:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "3670:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 406,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3674:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 408,
												"nodeType": "Return",
												"src": "3663:12:3"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3334:245:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3594:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3606:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3598:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3617:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3609:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:22:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3643:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:3"
									},
									"scope": 516,
									"src": "3585:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "4051:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "4069:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 421,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "4073:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 419,
												"id": 423,
												"nodeType": "Return",
												"src": "4062:12:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3691:287:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3993:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "4008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:22:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "4042:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:9:3"
									},
									"scope": 516,
									"src": "3984:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "4616:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 435,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "4634:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 436,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "4638:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4634:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 434,
												"id": 438,
												"nodeType": "Return",
												"src": "4627:12:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "4090:453:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4558:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4570:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4562:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4581:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4573:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:22:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4607:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:9:3"
									},
									"scope": 516,
									"src": "4549:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "5255:111:3",
										"statements": [
											{
												"id": 463,
												"nodeType": "UncheckedBlock",
												"src": "5266:93:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 453,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5299:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 454,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "5304:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5299:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 456,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "5307:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 452,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5291:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 458,
														"nodeType": "ExpressionStatement",
														"src": "5291:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "5342:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 460,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5346:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 451,
														"id": 462,
														"nodeType": "Return",
														"src": "5335:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "4655:465:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5135:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5157:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5177:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5169:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5203:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5189:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5189:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:84:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5246:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:9:3"
									},
									"scope": 516,
									"src": "5126:240:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "5993:110:3",
										"statements": [
											{
												"id": 488,
												"nodeType": "UncheckedBlock",
												"src": "6004:92:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 478,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6037:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6041:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6037:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 481,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "6044:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 477,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6029:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6029:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 483,
														"nodeType": "ExpressionStatement",
														"src": "6029:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 484,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "6079:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 485,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "6083:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6079:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 476,
														"id": 487,
														"nodeType": "Return",
														"src": "6072:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "5374:484:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5873:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5895:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5887:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5907:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5941:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5927:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5927:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:84:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5984:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:9:3"
									},
									"scope": 516,
									"src": "5864:239:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "6895:110:3",
										"statements": [
											{
												"id": 513,
												"nodeType": "UncheckedBlock",
												"src": "6906:92:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 503,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "6939:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6943:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6939:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 506,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "6946:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 502,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6931:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6931:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 508,
														"nodeType": "ExpressionStatement",
														"src": "6931:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 509,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "6981:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 510,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "6985:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6981:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 501,
														"id": 512,
														"nodeType": "Return",
														"src": "6974:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "6111:649:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6775:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6797:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6789:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6817:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6809:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6809:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6843:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6829:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6829:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:84:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6886:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:9:3"
									},
									"scope": 516,
									"src": "6766:239:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 517,
							"src": "497:6511:3",
							"usedErrors": []
						}
					],
					"src": "110:6898:3"
				},
				"id": 3
			},
			"TransferHelper.sol": {
				"ast": {
					"absolutePath": "TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							676
						]
					},
					"id": 677,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 518,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676
							],
							"name": "TransferHelper",
							"nameLocation": "196:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "324:339:4",
										"statements": [
											{
												"assignments": [
													528,
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "407:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "402:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 527,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "402:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "429:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "416:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 529,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "416:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "471:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 536,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "483:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "487:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 533,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "448:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "448:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "448:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 531,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "437:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "437:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "437:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "401:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "527:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 543,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "539:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "539:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "554:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "539:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 549,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "570:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 551,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "577:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 550,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "577:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 552,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "576:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 547,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "559:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "559:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "559:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "539:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 555,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "538:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "527:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "599:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															},
															"value": "TransferHelper::safeApprove: approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "505:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "505:150:4"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "227:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "257:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "249:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "281:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "273:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "302:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "294:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:76:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:4"
									},
									"scope": 676,
									"src": "218:445:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "778:342:4",
										"statements": [
											{
												"assignments": [
													571,
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "862:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "857:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "857:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "884:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "871:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 572,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "871:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "926:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 579,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "938:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "942:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 576,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "903:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "903:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "903:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 574,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "892:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "892:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "856:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 585,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "982:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 586,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 573,
																					"src": "994:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "994:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1009:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "994:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 592,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 573,
																					"src": "1025:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 594,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1032:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 593,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1032:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 595,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1031:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 590,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1014:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1014:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1014:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "994:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 598,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "993:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "982:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1054:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "960:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:152:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "960:152:4"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "680:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "711:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "756:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "748:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:76:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:0:4"
									},
									"scope": 676,
									"src": "671:449:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "1262:364:4",
										"statements": [
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1358:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "1353:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1353:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1380:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "1367:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1367:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1422:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 624,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1434:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "1440:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 626,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "1444:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 621,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1399:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1399:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1399:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 619,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "1388:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1388:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1352:99:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 631,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "1484:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 632,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "1496:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1496:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1511:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1496:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 638,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "1527:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 640,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1534:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 639,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1534:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 641,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1533:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 636,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1516:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1516:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1516:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1496:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1495:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1484:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1556:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:156:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "1462:156:4"
											}
										]
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1137:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1172:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1164:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1196:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1188:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1240:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1232:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:99:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:0:4"
									},
									"scope": 676,
									"src": "1128:498:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1695:156:4",
										"statements": [
											{
												"assignments": [
													658,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1712:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "1707:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 657,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1707:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 668,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1757:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1747:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 663,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1747:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 659,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "1725:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1725:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 661,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "1740:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1725:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1706:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "1779:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:54:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1771:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "1771:72:4"
											}
										]
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1643:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1659:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1679:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1671:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:27:4"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1695:0:4"
									},
									"scope": 676,
									"src": "1634:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "188:1666:4",
							"usedErrors": []
						}
					],
					"src": "48:1806:4"
				},
				"id": 4
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"EcioStaking": [
							1330
						],
						"IERC20": [
							99
						],
						"Ownable": [
							204
						],
						"SafeMath": [
							516
						],
						"TransferHelper": [
							676
						]
					},
					"id": 1331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1331,
							"sourceUnit": 517,
							"src": "60:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TransferHelper.sol",
							"file": "./TransferHelper.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1331,
							"sourceUnit": 677,
							"src": "86:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1331,
							"sourceUnit": 205,
							"src": "118:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1331,
							"sourceUnit": 100,
							"src": "143:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 683,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 204,
										"src": "193:7:5"
									},
									"id": 684,
									"nodeType": "InheritanceSpecifier",
									"src": "193:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1330,
							"linearizedBaseContracts": [
								1330,
								204,
								21
							],
							"name": "EcioStaking",
							"nameLocation": "178:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 687,
									"libraryName": {
										"id": 685,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 516,
										"src": "214:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "208:25:5",
									"typeName": {
										"id": 686,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "228:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "EcioStaking.UserInfo",
									"id": 698,
									"members": [
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "276:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "268:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 688,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "268:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "rewarded",
											"nameLocation": "301:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "293:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 690,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "293:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 693,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "328:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "320:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 692,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "320:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "lastCalculatedTimeStamp",
											"nameLocation": "357:23:5",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "349:31:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 694,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "349:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 697,
											"mutability": "mutable",
											"name": "lastDepositTimeStamp",
											"nameLocation": "399:20:5",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "391:28:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 696,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "391:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "248:8:5",
									"nodeType": "StructDefinition",
									"scope": 1330,
									"src": "241:186:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fcbd285",
									"id": 700,
									"mutability": "mutable",
									"name": "lpToken",
									"nameLocation": "468:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "453:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 699,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "453:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 702,
									"mutability": "mutable",
									"name": "totalAmount",
									"nameLocation": "497:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "482:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 701,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "356c7284",
									"id": 704,
									"mutability": "mutable",
									"name": "lastRewardTimeStamp",
									"nameLocation": "530:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "515:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 703,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 711,
									"mutability": "mutable",
									"name": "REWARD_PER_DAY",
									"nameLocation": "574:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "558:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 705,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "558:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 708,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "31",
												"id": 706,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "591:1:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "316536",
												"id": 707,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "595:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000000_by_1",
													"typeString": "int_const 1000000"
												},
												"value": "1e6"
											},
											"src": "591:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 709,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "601:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "591:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 713,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "658:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "643:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 712,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "643:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc6f9468",
									"id": 715,
									"mutability": "mutable",
									"name": "adminAddress",
									"nameLocation": "691:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "676:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 714,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 720,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "841:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "804:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
										"typeString": "mapping(address => struct EcioStaking.UserInfo)"
									},
									"typeName": {
										"id": 719,
										"keyType": {
											"id": 716,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "813:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "804:29:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
											"typeString": "mapping(address => struct EcioStaking.UserInfo)"
										},
										"valueType": {
											"id": 718,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 717,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 698,
												"src": "824:8:5"
											},
											"referencedDeclaration": 698,
											"src": "824:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
												"typeString": "struct EcioStaking.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f4216e8",
									"id": 723,
									"mutability": "mutable",
									"name": "userList",
									"nameLocation": "873:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "856:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 721,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "856:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 722,
										"nodeType": "ArrayTypeName",
										"src": "856:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8b38205",
									"id": 730,
									"mutability": "mutable",
									"name": "lockedTime",
									"nameLocation": "903:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "888:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 724,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "888:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5184000_by_1",
											"typeString": "int_const 5184000"
										},
										"id": 729,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											},
											"id": 727,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3630",
												"id": 725,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "916:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60_by_1",
													"typeString": "int_const 60"
												},
												"value": "60"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3234",
												"id": 726,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "921:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "916:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "33363030",
											"id": 728,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "926:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3600_by_1",
												"typeString": "int_const 3600"
											},
											"value": "3600"
										},
										"src": "916:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5184000_by_1",
											"typeString": "int_const 5184000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 733,
									"mutability": "mutable",
									"name": "unlocked",
									"nameLocation": "960:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "947:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 731,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "947:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "971:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 739,
									"name": "Deposit",
									"nameLocation": "987:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1011:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "995:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1025:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1017:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:38:5"
									},
									"src": "981:52:5"
								},
								{
									"anonymous": false,
									"id": 745,
									"name": "Withdraw",
									"nameLocation": "1045:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1070:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1054:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1084:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1076:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:38:5"
									},
									"src": "1039:53:5"
								},
								{
									"anonymous": false,
									"id": 751,
									"name": "Reward",
									"nameLocation": "1104:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1127:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1111:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1141:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1133:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:38:5"
									},
									"src": "1098:51:5"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "1241:177:5",
										"statements": [
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 758,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "1252:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 759,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1267:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1267:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1252:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "1252:25:5"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 763,
														"name": "lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "1288:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 764,
														"name": "_lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1298:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1288:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "1288:18:5"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 767,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1317:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 768,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "1331:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1317:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "1317:26:5"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 771,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "1354:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1368:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1354:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "1354:15:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 776,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1399:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1399:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 775,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1380:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "1380:30:5"
											}
										]
									},
									"id": 781,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "1187:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1179:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1214:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1206:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:65:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:0:5"
									},
									"scope": 1330,
									"src": "1157:261:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1495:41:5",
										"statements": [
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 788,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1506:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 789,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1520:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1506:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "1506:22:5"
											}
										]
									},
									"functionSelector": "fd1a2397",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 786,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 785,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1485:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1485:9:5"
										}
									],
									"name": "updateRewardTokenAddress",
									"nameLocation": "1435:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1468:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1460:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:18:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:0:5"
									},
									"scope": 1330,
									"src": "1426:110:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "1613:37:5",
										"statements": [
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "1624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 801,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "1634:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1624:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "1624:18:5"
											}
										]
									},
									"functionSelector": "5fd595c0",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 798,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 797,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1603:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1603:9:5"
										}
									],
									"name": "updateLpTokenAddress",
									"nameLocation": "1557:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1586:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1578:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:18:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:0:5"
									},
									"scope": 1330,
									"src": "1548:102:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "1711:41:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "userList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1729:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1729:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "1722:22:5"
											}
										]
									},
									"functionSelector": "f0c37a59",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userCounter",
									"nameLocation": "1667:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1702:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:9:5"
									},
									"scope": 1330,
									"src": "1658:94:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "1828:43:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 821,
														"name": "userList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1846:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 823,
													"indexExpression": {
														"id": 822,
														"name": "userNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1855:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1846:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 820,
												"id": 824,
												"nodeType": "Return",
												"src": "1839:24:5"
											}
										]
									},
									"functionSelector": "9674a0ac",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userAddress",
									"nameLocation": "1769:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "userNum",
												"nameLocation": "1789:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1781:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:17:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1819:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:9:5"
									},
									"scope": 1330,
									"src": "1760:111:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "1954:99:5",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1982:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "1965:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo"
														},
														"typeName": {
															"id": 834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 833,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "1965:8:5"
															},
															"referencedDeclaration": 698,
															"src": "1965:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"baseExpression": {
														"id": 836,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1989:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
															"typeString": "mapping(address => struct EcioStaking.UserInfo storage ref)"
														}
													},
													"id": 840,
													"indexExpression": {
														"baseExpression": {
															"id": 837,
															"name": "userList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "1998:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 839,
														"indexExpression": {
															"id": 838,
															"name": "userNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "2007:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1998:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1989:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$698_storage",
														"typeString": "struct EcioStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1965:51:5"
											},
											{
												"expression": {
													"expression": {
														"id": 842,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2034:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo storage pointer"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 689,
													"src": "2034:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 832,
												"id": 844,
												"nodeType": "Return",
												"src": "2027:18:5"
											}
										]
									},
									"functionSelector": "6a9db411",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userStakedLpAmount",
									"nameLocation": "1888:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "userNum",
												"nameLocation": "1915:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "1907:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:17:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "1945:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:9:5"
									},
									"scope": 1330,
									"src": "1879:174:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2140:385:5",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2168:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "2151:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo"
														},
														"typeName": {
															"id": 854,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 853,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "2151:8:5"
															},
															"referencedDeclaration": 698,
															"src": "2151:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"baseExpression": {
														"id": 856,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2175:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
															"typeString": "mapping(address => struct EcioStaking.UserInfo storage ref)"
														}
													},
													"id": 858,
													"indexExpression": {
														"id": 857,
														"name": "_useraddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2184:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2175:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$698_storage",
														"typeString": "struct EcioStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2151:46:5"
											},
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "lastTimeStamp",
														"nameLocation": "2216:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "2208:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2208:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"expression": {
														"id": 862,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2232:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2232:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2208:39:5"
											},
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "virtualRewardAmount",
														"nameLocation": "2266:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "2258:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2258:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"hexValue": "30",
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2288:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2258:31:5"
											},
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "virtualActiveDay",
														"nameLocation": "2308:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "2300:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 871,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "2328:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 872,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "2344:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastCalculatedTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 695,
																	"src": "2344:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2328:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 875,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2327:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "31",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2377:6:5",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"id": 877,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2376:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														}
													},
													"src": "2327:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2300:84:5"
											},
											{
												"expression": {
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "virtualRewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "2395:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 881,
																			"name": "virtualActiveDay",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "2418:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 882,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "2437:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																					"typeString": "struct EcioStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 689,
																			"src": "2437:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2418:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 885,
																		"name": "REWARD_PER_DAY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "2451:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2418:47:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 887,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2417:49:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 888,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "2469:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2417:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2395:85:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "2395:85:5"
											},
											{
												"expression": {
													"id": 892,
													"name": "virtualRewardAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "2498:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 893,
												"nodeType": "Return",
												"src": "2491:26:5"
											}
										]
									},
									"functionSelector": "6e26a967",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ecioClaimPossible",
									"nameLocation": "2070:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "_useraddress",
												"nameLocation": "2096:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2088:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:22:5"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2131:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:9:5"
									},
									"scope": 1330,
									"src": "2061:464:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "2593:37:5",
										"statements": [
											{
												"expression": {
													"id": 900,
													"name": "totalAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "2611:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 899,
												"id": 901,
												"nodeType": "Return",
												"src": "2604:18:5"
											}
										]
									},
									"functionSelector": "bce4f054",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalLpTokenAmount",
									"nameLocation": "2542:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2560:2:5"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2584:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:9:5"
									},
									"scope": 1330,
									"src": "2533:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2669:526:5",
										"statements": [
											{
												"body": {
													"id": 973,
													"nodeType": "Block",
													"src": "2723:465:5",
													"statements": [
														{
															"assignments": [
																919
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 919,
																	"mutability": "mutable",
																	"name": "user",
																	"nameLocation": "2755:4:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 973,
																	"src": "2738:21:5",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																		"typeString": "struct EcioStaking.UserInfo"
																	},
																	"typeName": {
																		"id": 918,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 917,
																			"name": "UserInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 698,
																			"src": "2738:8:5"
																		},
																		"referencedDeclaration": 698,
																		"src": "2738:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 925,
															"initialValue": {
																"baseExpression": {
																	"id": 920,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "2762:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
																		"typeString": "mapping(address => struct EcioStaking.UserInfo storage ref)"
																	}
																},
																"id": 924,
																"indexExpression": {
																	"baseExpression": {
																		"id": 921,
																		"name": "userList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "2771:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 923,
																	"indexExpression": {
																		"id": 922,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "2780:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2771:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2762:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$698_storage",
																	"typeString": "struct EcioStaking.UserInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2738:45:5"
														},
														{
															"assignments": [
																927
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 927,
																	"mutability": "mutable",
																	"name": "lastTimeStamp",
																	"nameLocation": "2806:13:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 973,
																	"src": "2798:21:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 926,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2798:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 930,
															"initialValue": {
																"expression": {
																	"id": 928,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2822:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2822:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2798:39:5"
														},
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "rewardedDay",
																	"nameLocation": "2860:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 973,
																	"src": "2852:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2852:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 940,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 933,
																				"name": "lastTimeStamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2875:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 934,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 919,
																					"src": "2891:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																						"typeString": "struct EcioStaking.UserInfo storage pointer"
																					}
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lastCalculatedTimeStamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 695,
																				"src": "2891:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2875:44:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 937,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2874:46:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2923:6:5",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "2874:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2852:77:5"
														},
														{
															"assignments": [
																942
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 942,
																	"mutability": "mutable",
																	"name": "accDebt",
																	"nameLocation": "2952:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 973,
																	"src": "2944:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 941,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2944:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 951,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 943,
																			"name": "rewardedDay",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 932,
																			"src": "2962:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 944,
																			"name": "REWARD_PER_DAY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "2976:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2962:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 946,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "2993:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																				"typeString": "struct EcioStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "2993:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2962:42:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 949,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "3007:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2962:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2944:74:5"
														},
														{
															"expression": {
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 952,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "3033:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 693,
																	"src": "3033:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 958,
																			"name": "accDebt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "3071:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 955,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 919,
																				"src": "3051:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																					"typeString": "struct EcioStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 956,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 693,
																			"src": "3051:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 380,
																		"src": "3051:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3051:28:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3033:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 961,
															"nodeType": "ExpressionStatement",
															"src": "3033:46:5"
														},
														{
															"expression": {
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 962,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "3094:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastCalculatedTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 695,
																	"src": "3094:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 965,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "3125:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																				"typeString": "struct EcioStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastCalculatedTimeStamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 695,
																		"src": "3125:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 967,
																			"name": "rewardedDay",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 932,
																			"src": "3156:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3170:6:5",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		},
																		"src": "3156:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3125:51:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3094:82:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 972,
															"nodeType": "ExpressionStatement",
															"src": "3094:82:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "2697:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 911,
															"name": "userList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "2701:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2701:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2697:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"initializationExpression": {
													"assignments": [
														907
													],
													"declarations": [
														{
															"constant": false,
															"id": 907,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2690:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 974,
															"src": "2685:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 906,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2685:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 909,
													"initialValue": {
														"hexValue": "30",
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2694:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2685:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2718:3:5",
														"subExpression": {
															"id": 914,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2718:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 916,
													"nodeType": "ExpressionStatement",
													"src": "2718:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2680:508:5"
											}
										]
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "2647:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:2:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:5"
									},
									"scope": 1330,
									"src": "2638:557:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "3241:991:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "3260:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3269:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3260:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e7661696c6420616d6f756e74",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3272:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_117e28c1605b64da1169008bcd4bb6303a577bc5202f105735275c9b0f921425",
																"typeString": "literal_string \"invaild amount\""
															},
															"value": "invaild amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_117e28c1605b64da1169008bcd4bb6303a577bc5202f105735275c9b0f921425",
																"typeString": "literal_string \"invaild amount\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3252:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3252:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "3252:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 992,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3341:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 996,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3361:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EcioStaking_$1330",
																		"typeString": "contract EcioStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EcioStaking_$1330",
																		"typeString": "contract EcioStaking"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3353:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3353:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3353:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "3368:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 988,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3300:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$676_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 650,
														"src": "3300:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "3300:75:5"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3403:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "3386:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo"
														},
														"typeName": {
															"id": 1002,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1001,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "3386:8:5"
															},
															"referencedDeclaration": 698,
															"src": "3386:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"baseExpression": {
														"id": 1004,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "3410:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
															"typeString": "mapping(address => struct EcioStaking.UserInfo storage ref)"
														}
													},
													"id": 1007,
													"indexExpression": {
														"expression": {
															"id": 1005,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3419:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3419:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3410:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$698_storage",
														"typeString": "struct EcioStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:44:5"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "isFirst",
														"nameLocation": "3446:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "3441:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1009,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3441:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3456:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3441:19:5"
											},
											{
												"body": {
													"id": 1036,
													"nodeType": "Block",
													"src": "3514:107:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1024,
																		"name": "userList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "3533:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1026,
																	"indexExpression": {
																		"id": 1025,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "3542:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3533:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1027,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3548:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3548:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3533:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1035,
															"nodeType": "IfStatement",
															"src": "3529:81:5",
															"trueBody": {
																"id": 1034,
																"nodeType": "Block",
																"src": "3560:50:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1030,
																				"name": "isFirst",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "3579:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "3579:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1033,
																		"nodeType": "ExpressionStatement",
																		"src": "3579:15:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "3488:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1018,
															"name": "userList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "3492:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3492:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3488:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"initializationExpression": {
													"assignments": [
														1014
													],
													"declarations": [
														{
															"constant": false,
															"id": 1014,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3481:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1037,
															"src": "3476:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1013,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3476:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1016,
													"initialValue": {
														"hexValue": "30",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3485:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3476:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3509:3:5",
														"subExpression": {
															"id": 1021,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "3509:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1023,
													"nodeType": "ExpressionStatement",
													"src": "3509:3:5"
												},
												"nodeType": "ForStatement",
												"src": "3471:150:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1038,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "3631:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3631:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "3631:12:5"
											},
											{
												"condition": {
													"id": 1041,
													"name": "isFirst",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1010,
													"src": "3658:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "3957:180:5",
													"statements": [
														{
															"expression": {
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1082,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3972:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "3972:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1085,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "3986:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																				"typeString": "struct EcioStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "3986:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1087,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "4000:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3986:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3972:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1090,
															"nodeType": "ExpressionStatement",
															"src": "3972:34:5"
														},
														{
															"expression": {
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1091,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "4021:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastDepositTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 697,
																	"src": "4021:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1094,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4049:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4049:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4021:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1097,
															"nodeType": "ExpressionStatement",
															"src": "4021:43:5"
														},
														{
															"expression": {
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1098,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "4079:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastCalculatedTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 695,
																	"src": "4079:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1101,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4110:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4079:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1104,
															"nodeType": "ExpressionStatement",
															"src": "4079:46:5"
														}
													]
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "3654:483:5",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "3667:284:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1045,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3696:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3696:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1042,
																		"name": "userList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "3682:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3682:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3682:25:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1048,
															"nodeType": "ExpressionStatement",
															"src": "3682:25:5"
														},
														{
															"expression": {
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1049,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "3722:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1052,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "3736:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3722:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1054,
															"nodeType": "ExpressionStatement",
															"src": "3722:20:5"
														},
														{
															"expression": {
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1055,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3757:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewarded",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 691,
																	"src": "3757:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3773:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3757:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1060,
															"nodeType": "ExpressionStatement",
															"src": "3757:17:5"
														},
														{
															"expression": {
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1061,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3789:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 693,
																	"src": "3789:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3807:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3789:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1066,
															"nodeType": "ExpressionStatement",
															"src": "3789:19:5"
														},
														{
															"expression": {
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1067,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3823:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastDepositTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 697,
																	"src": "3823:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1070,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3851:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3851:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3823:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1073,
															"nodeType": "ExpressionStatement",
															"src": "3823:43:5"
														},
														{
															"expression": {
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1074,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3881:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastCalculatedTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 695,
																	"src": "3881:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1077,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3912:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3912:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3881:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1080,
															"nodeType": "ExpressionStatement",
															"src": "3881:46:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4147:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1108,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4161:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "4175:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4161:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4147:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "4147:34:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4205:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4205:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "4217:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "4197:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4197:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "4192:32:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3212:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3226:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3218:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:16:5"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3241:0:5"
									},
									"scope": 1330,
									"src": "3203:1029:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "4272:375:5",
										"statements": [
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "isUser",
														"nameLocation": "4288:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "4283:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1123,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4283:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4297:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4283:19:5"
											},
											{
												"body": {
													"id": 1169,
													"nodeType": "Block",
													"src": "4364:251:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1140,
																		"name": "userList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "4382:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1142,
																	"indexExpression": {
																		"id": 1141,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "4391:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4382:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1143,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4397:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4397:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4382:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "4379:104:5",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "4408:75:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1146,
																				"name": "isUser",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "4427:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4436:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "4427:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1149,
																		"nodeType": "ExpressionStatement",
																		"src": "4427:13:5"
																	},
																	{
																		"id": 1150,
																		"nodeType": "Continue",
																		"src": "4459:8:5"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1153,
																	"name": "isUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "4500:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4510:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4500:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1158,
															"nodeType": "IfStatement",
															"src": "4497:63:5",
															"trueBody": {
																"id": 1157,
																"nodeType": "Block",
																"src": "4517:43:5",
																"statements": [
																	{
																		"id": 1156,
																		"nodeType": "Continue",
																		"src": "4536:8:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1159,
																		"name": "userList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "4574:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1161,
																	"indexExpression": {
																		"id": 1160,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "4583:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4574:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1162,
																		"name": "userList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "4588:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1166,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1163,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1128,
																			"src": "4597:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4601:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4597:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4588:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4574:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1168,
															"nodeType": "ExpressionStatement",
															"src": "4574:29:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1131,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "4333:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1132,
																"name": "userList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "4337:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4337:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4355:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4337:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4333:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1170,
												"initializationExpression": {
													"assignments": [
														1128
													],
													"declarations": [
														{
															"constant": false,
															"id": 1128,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4325:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1170,
															"src": "4317:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1127,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4317:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1130,
													"initialValue": {
														"hexValue": "30",
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4329:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4317:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4359:4:5",
														"subExpression": {
															"id": 1137,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "4359:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ExpressionStatement",
													"src": "4359:4:5"
												},
												"nodeType": "ForStatement",
												"src": "4313:302:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1171,
															"name": "userList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "4625:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "4625:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4625:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "4625:14:5"
											}
										]
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deleteBlock",
									"nameLocation": "4249:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4260:2:5"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4272:0:5"
									},
									"scope": 1330,
									"src": "4240:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "4682:497:5",
										"statements": [
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4710:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "4693:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo"
														},
														"typeName": {
															"id": 1181,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1180,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "4693:8:5"
															},
															"referencedDeclaration": 698,
															"src": "4693:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"baseExpression": {
														"id": 1183,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "4717:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
															"typeString": "mapping(address => struct EcioStaking.UserInfo storage ref)"
														}
													},
													"id": 1186,
													"indexExpression": {
														"expression": {
															"id": 1184,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4726:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4726:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4717:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$698_storage",
														"typeString": "struct EcioStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4693:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1189,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "4756:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																		"typeString": "struct EcioStaking.UserInfo storage pointer"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastDepositTimeStamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 697,
																"src": "4756:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4784:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4756:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c69642075736572",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4787:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6",
																"typeString": "literal_string \"invalid user\""
															},
															"value": "invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6",
																"typeString": "literal_string \"invalid user\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4748:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4748:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "4748:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1197,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "4821:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																		"typeString": "struct EcioStaking.UserInfo storage pointer"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 689,
																"src": "4821:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4835:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4821:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74207374616b6564",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4838:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12",
																"typeString": "literal_string \"not staked\""
															},
															"value": "not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12",
																"typeString": "literal_string \"not staked\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4813:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "4813:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1205,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "4870:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																			"typeString": "struct EcioStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastDepositTimeStamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 697,
																	"src": "4870:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1207,
																	"name": "lockedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "4898:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4870:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1209,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4911:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4911:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4870:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f752061726520696e206c6f636b656454696d652e",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4928:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d2557949e59bddd494ce8c82f9c2b2f252809dcf39c2170df8a6486e0b467b",
																"typeString": "literal_string \"you are in lockedTime.\""
															},
															"value": "you are in lockedTime."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d2557949e59bddd494ce8c82f9c2b2f252809dcf39c2170df8a6486e0b467b",
																"typeString": "literal_string \"you are in lockedTime.\""
															}
														],
														"id": 1204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "4862:91:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1215,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "4964:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4964:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "4964:12:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5024:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5024:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1224,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "5036:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																	"typeString": "struct EcioStaking.UserInfo storage pointer"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 689,
															"src": "5036:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1218,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "4987:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$676_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "4987:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4987:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "4987:61:5"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "5059:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1229,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5073:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1230,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "5087:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																	"typeString": "struct EcioStaking.UserInfo storage pointer"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 689,
															"src": "5087:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5073:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5059:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "5059:39:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1235,
														"name": "deleteBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5109:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5109:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "5109:13:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1239,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5147:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5147:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1241,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "5159:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																	"typeString": "struct EcioStaking.UserInfo storage pointer"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 689,
															"src": "5159:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1238,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5138:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "EmitStatement",
												"src": "5133:38:5"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "4664:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4672:2:5"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4682:0:5"
									},
									"scope": 1330,
									"src": "4655:524:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "5211:376:5",
										"statements": [
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5239:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1302,
														"src": "5222:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo"
														},
														"typeName": {
															"id": 1250,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1249,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "5222:8:5"
															},
															"referencedDeclaration": 698,
															"src": "5222:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"baseExpression": {
														"id": 1252,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "5246:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$698_storage_$",
															"typeString": "mapping(address => struct EcioStaking.UserInfo storage ref)"
														}
													},
													"id": 1255,
													"indexExpression": {
														"expression": {
															"id": 1253,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5255:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5255:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5246:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$698_storage",
														"typeString": "struct EcioStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5222:44:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1257,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "5277:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5277:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "5277:12:5"
											},
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5305:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1302,
														"src": "5300:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"expression": {
														"id": 1262,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "5314:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
															"typeString": "struct EcioStaking.UserInfo storage pointer"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardDebt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 693,
													"src": "5314:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5300:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1266,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5348:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5357:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5348:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f7567682072657761726420616d6f756e74",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5360:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b67daa85c7b3b58715d6b30e7b18323ccc16fb1f49726e7a66123f1c0d63b6a",
																"typeString": "literal_string \"not enough reward amount\""
															},
															"value": "not enough reward amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b67daa85c7b3b58715d6b30e7b18323ccc16fb1f49726e7a66123f1c0d63b6a",
																"typeString": "literal_string \"not enough reward amount\""
															}
														],
														"id": 1265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5340:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5340:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "5340:47:5"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1272,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "5398:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo storage pointer"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewarded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 691,
														"src": "5398:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1275,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "5414:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																	"typeString": "struct EcioStaking.UserInfo storage pointer"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewarded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 691,
															"src": "5414:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1277,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5430:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5414:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5398:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "5398:38:5"
											},
											{
												"expression": {
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1281,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "5447:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$698_storage_ptr",
																"typeString": "struct EcioStaking.UserInfo storage pointer"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "5447:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5465:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5447:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "5447:19:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1290,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5505:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5518:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5518:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5530:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1287,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5477:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$676_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "5477:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "5477:60:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5560:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5560:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5572:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1296,
														"name": "Reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5553:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5553:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "EmitStatement",
												"src": "5548:31:5"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "5196:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5201:2:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5211:0:5"
									},
									"scope": 1330,
									"src": "5187:400:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "5693:99:5",
										"statements": [
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "_token",
														"nameLocation": "5711:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "5704:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1315,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1314,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 99,
																"src": "5704:6:5"
															},
															"referencedDeclaration": 99,
															"src": "5704:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"id": 1318,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "5727:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1317,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "5720:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5704:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1324,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5771:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5776:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1321,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "5755:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 66,
														"src": "5755:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5755:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "5755:29:5"
											}
										]
									},
									"functionSelector": "f5537ede",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1311,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "5683:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5683:9:5"
										}
									],
									"name": "transferToken",
									"nameLocation": "5604:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "5626:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5618:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5618:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5652:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5644:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5665:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5657:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:56:5"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5693:0:5"
									},
									"scope": 1330,
									"src": "5595:197:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1331,
							"src": "169:5626:5",
							"usedErrors": []
						}
					],
					"src": "35:5764:5"
				},
				"id": 5
			}
		}
	}
}